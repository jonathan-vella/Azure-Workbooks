{
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workbookDisplayName": {
      "type": "string",
      "defaultValue": "Policy Distribution Dashboard",
      "metadata": {
        "description": "The friendly name for the workbook that is used in the Gallery or Saved List.  This name must be unique within a resource group."
      }
    },
    "workbookType": {
      "type": "string",
      "defaultValue": "workbook",
      "metadata": {
        "description": "The gallery that the workbook will been shown under. Supported values include workbook, tsg, etc. Usually, this is 'workbook'"
      }
    },
    "workbookSourceId": {
      "type": "string",
      "defaultValue": "Azure Security Center",
      "metadata": {
        "description": "The id of resource instance to which the workbook will be associated"
      }
    },
    "workbookId": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this workbook instance"
      }
    }
  },
  "variables": {
    "workbookContent": {
      "version": "Notebook/1.0",
      "items": [
        {
          "type": 1,
          "content": {
            "json": "## Policy Distribution Dashboard\r\nThis workbook has been created to provide a Single Pane of glass for Azure Policies assigned to your own environment."
          },
          "name": "Header"
        },
        {
          "type": 1,
          "content": {
            "json": "<svg viewBox=\"0 0 19 19\" width=\"20\" class=\"fxt-escapeShadow\" role=\"presentation\" focusable=\"false\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\"><g><path fill=\"#1b93eb\" d=\"M16.82 8.886c0 4.81-5.752 8.574-7.006 9.411a.477.477 0 01-.523 0C8.036 17.565 2.18 13.7 2.18 8.886V3.135a.451.451 0 01.42-.419C7.2 2.612 6.154.625 9.5.625s2.3 1.987 6.8 2.091a.479.479 0 01.523.419z\"></path><path fill=\"url(#0024423711759027356)\" d=\"M16.192 8.99c0 4.392-5.333 7.947-6.483 8.575a.319.319 0 01-.418 0c-1.15-.732-6.483-4.183-6.483-8.575V3.762a.575.575 0 01.313-.523C7.2 3.135 6.258 1.357 9.4 1.357s2.2 1.882 6.274 1.882a.45.45 0 01.419.418z\"></path><path d=\"M9.219 5.378a.313.313 0 01.562 0l.875 1.772a.314.314 0 00.236.172l1.957.284a.314.314 0 01.174.535l-1.416 1.38a.312.312 0 00-.09.278l.334 1.949a.313.313 0 01-.455.33l-1.75-.92a.314.314 0 00-.292 0l-1.75.92a.313.313 0 01-.455-.33L7.483 9.8a.312.312 0 00-.09-.278L5.977 8.141a.314.314 0 01.174-.535l1.957-.284a.314.314 0 00.236-.172z\" class=\"msportalfx-svg-c01\"></path></g></svg>&nbsp;<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> Please take the time to answer a quick survey. To submit your feedback,\r\n</span>[<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> click here. </span>](https://aka.ms/azurepolicyworkbook)"
          },
          "name": "Feedback"
        },
        {
          "type": 9,
          "content": {
            "version": "KqlParameterItem/1.0",
            "parameters": [
              {
                "id": "ed1ba19d-fd40-45f5-8a1b-f5d8427a122c",
                "version": "KqlParameterItem/1.0",
                "name": "Subscriptions",
                "type": 6,
                "description": "Please select one or several subscriptions to allow the workbook to view the Policies assigned to Defender for Cloud",
                "isRequired": true,
                "multiSelect": true,
                "quote": "'",
                "delimiter": ",",
                "value": [
                  "value::all"
                ],
                "typeSettings": {
                  "additionalResourceOptions": [
                    "value::all"
                  ],
                  "includeAll": true
                },
                "timeContext": {
                  "durationMs": 86400000
                }
              }
            ],
            "style": "pills",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          "name": "Parameters"
        },
        {
          "type": 11,
          "content": {
            "version": "LinkItem/1.0",
            "style": "tabs",
            "links": [
              {
                "id": "df8f3aa3-2c73-4259-a3f8-ac49986648b4",
                "cellValue": "SelectedView",
                "linkTarget": "parameter",
                "linkLabel": "Initiatives assigned to the Subscriptions",
                "subTarget": "Initiatives assigned to the Subscriptions",
                "preText": "Initiatives assigned to the Subscriptions",
                "style": "link"
              },
              {
                "id": "516472b4-01b7-41b6-acb7-7e4ba59660ae",
                "cellValue": "SelectedView",
                "linkTarget": "parameter",
                "linkLabel": "Exempted recommendations & that are policy disabled",
                "subTarget": "Exempted recommendations & that are policy disabled",
                "style": "link"
              },
              {
                "id": "f23a0a93-f50e-407d-8de4-1e7bf3e8c5b8",
                "cellValue": "SelectedView",
                "linkTarget": "parameter",
                "linkLabel": "Custom Policies",
                "subTarget": "Custom Policies",
                "style": "link"
              },
              {
                "id": "4b0ca4d3-1ce6-4cd2-92f3-f2de9154c292",
                "cellValue": "SelectedView",
                "linkTarget": "parameter",
                "linkLabel": "Regulatory Compliance Assessment State",
                "subTarget": "Regulatory Compliance Assessment State",
                "style": "link"
              },
              {
                "id": "40ff9dd4-1443-49f6-942c-b670c8ad8804",
                "cellValue": "SelectedView",
                "linkTarget": "parameter",
                "linkLabel": "Policies by Effect",
                "subTarget": "Policies by Effect",
                "style": "link"
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "Subscriptions",
            "comparison": "isNotEqualTo"
          },
          "name": "Main menu"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 1,
                "content": {
                  "json": "## Initiatives assigned to subscriptions"
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "Initiatives assigned to the Subscriptions"
                },
                "name": "text - 0"
              },
              {
                "type": 1,
                "content": {
                  "json": "This table provides an overview of all the Initiatives that are assigned to Defender for Cloud."
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "Initiatives assigned to the Subscriptions"
                },
                "name": "text - 1"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "policyresources\r\n| where type =~ 'microsoft.authorization/policyassignments'\r\n| extend [\"Display Name\"] = tostring(properties.displayName)\r\n| extend Prop = parse_json(properties)\r\n| extend [\"Assigned By\"] = tostring(properties.metadata.assignedBy)\r\n| where [\"Assigned By\"] == \"Security Center\"\r\n| project Name=id, [\"Display Name\"], [\"Assigned By\"], [\"Subscription\"]=subscriptionId",
                  "size": 0,
                  "showAnalytics": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "$gen_group",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "Subscription",
                        "formatter": 5
                      }
                    ],
                    "hierarchySettings": {
                      "treeType": 1,
                      "groupBy": [
                        "Subscription"
                      ]
                    }
                  }
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "Initiatives assigned to the Subscriptions"
                },
                "name": "query - 2"
              }
            ]
          },
          "name": "group - 3"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 1,
                "content": {
                  "json": "## List of recommendations that are exempted and that are policy disabled"
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "Exempted recommendations & that are policy disabled"
                },
                "name": "text - 0"
              },
              {
                "type": 1,
                "content": {
                  "json": "This table illustrates list of the Azure Resources that have recommendations that are Exempted due to Waiver or Mitigation and also Policy being disabled. Can be used as a quick report for auditors for tracking down exemptions and disabled policies for review.\r\n\r\n"
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "Exempted recommendations & that are policy disabled"
                },
                "name": "text - 1"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "securityresources\r\n        | where type == \"microsoft.security/assessments\"\r\n        | extend source = tostring(properties.resourceDetails.Source)\r\n        | extend resourceId =\r\n            trim(\" \", tolower(tostring(case(source =~ \"azure\", properties.resourceDetails.Id,\r\n                                            source =~ \"aws\", properties.resourceDetails.AzureResourceId,\r\n                                            source =~ \"gcp\", properties.resourceDetails.AzureResourceId,\r\n                                           extract(\"^(.+)/providers/Microsoft.Security/assessments/.+$\",1,id)))))\r\n        | extend status = trim(\" \", tostring(properties.status.code))\r\n        | extend cause = trim(\" \", tostring(properties.status.cause))\r\n        | mv-expand policy=properties.statusPerInitiative\r\n        | extend policyInitiativeName = policy.policyInitiativeName\r\n        | extend policyAssessmentStatusCode = policy.assessmentStatus.code\r\n        | extend assessmentKey = tostring(name)\r\n        | where cause == \"Exempt\" or cause == \"OffByPolicy\"\r\n        | extend ResourceName = tostring(split(resourceId,'/')[8]), RecommendationName = tostring(properties.displayName), Source = properties.resourceDetails.Source, StatusCause = tostring(properties.status.cause), StatusDescription = properties.status.description, RecommendationSeverity = tostring(properties.metadata.severity)\r\n        //| project subscriptionId, RecommendationName, RecommendationSeverity, ResourceName, StatusCause, StatusDescription, policyInitiativeName, policyAssessmentStatusCode, resourceGroup, Source\r\n        | distinct subscriptionId, RecommendationName, RecommendationSeverity, StatusCause, tostring(StatusDescription), tostring(policyInitiativeName), tostring(policyAssessmentStatusCode), tostring(Source)\r\n        | sort by RecommendationSeverity, RecommendationName",
                  "size": 0,
                  "showAnalytics": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "RecommendationName",
                        "formatter": 7,
                        "formatOptions": {
                          "linkTarget": "GenericDetails",
                          "linkIsContextBlade": true,
                          "templateRunContext": {
                            "componentIdSource": "parameter",
                            "templateUriSource": "static",
                            "templateParameters": [],
                            "titleSource": "static",
                            "descriptionSource": "static",
                            "runLabelSource": "static"
                          },
                          "bladeOpenContext": {
                            "bladeParameters": []
                          }
                        }
                      },
                      {
                        "columnMatch": "RecommendationSeverity",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "policyAssessmentStatusCode",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "resourceGroup",
                        "formatter": 5
                      }
                    ],
                    "hierarchySettings": {
                      "treeType": 1,
                      "groupBy": [
                        "StatusCause",
                        "RecommendationName"
                      ]
                    },
                    "labelSettings": [
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RecommendationName",
                        "label": "Recommendation Name"
                      },
                      {
                        "columnId": "RecommendationSeverity",
                        "label": "Recommendation Severity"
                      },
                      {
                        "columnId": "StatusCause",
                        "label": "Status Cause"
                      },
                      {
                        "columnId": "StatusDescription",
                        "label": "Status Description"
                      },
                      {
                        "columnId": "policyInitiativeName",
                        "label": "Policy InitiativeName"
                      },
                      {
                        "columnId": "policyAssessmentStatusCode",
                        "label": "Policy Assessment StatusCode"
                      }
                    ]
                  }
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "Exempted recommendations & that are policy disabled"
                },
                "name": "query - 2"
              }
            ]
          },
          "name": "group - 4"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 1,
                "content": {
                  "json": "## List of Custom Policies"
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "Custom Policies"
                },
                "name": "text - 0"
              },
              {
                "type": 1,
                "content": {
                  "json": "This table represents list of custom policies you have assigned in your environment"
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "Custom Policies"
                },
                "name": "text - 1"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "securityresources| where type == \"microsoft.security/assessments\" \r\n// Get recommendations in useful format\r\n| where properties.metadata.assessmentType !has \"BuiltIn\" \r\n| project ['TenantID'] = tenantId, ['subscriptionId'] = tostring(subscriptionId),\r\n['AssessmentID'] = name, ['DisplayName'] = properties.displayName, \r\n['ResourceType'] = tolower(split(properties.resourceDetails.Id,\"/\").[7]),\r\n ['ResourceName'] = tolower(split(properties.resourceDetails.Id,\"/\").[8]), \r\n['ResourceGroup'] = resourceGroup, \r\n['ContainsNestedRecom'] = tostring(properties.additionalData.subAssessmentsLink), \r\n['StatusCode'] = properties.status.code, ['StatusDescription'] = properties.status.description, \r\n['PolicyDefID'] = properties.metadata.policyDefinitionId, \r\n['Description'] = properties.metadata.description, \r\n['RecomType'] = properties.metadata.assessmentType, \r\n['Remediation'] = properties.metadata.remediationDescription, \r\n['Severity'] = properties.metadata.severity, \r\n['Link'] = properties.links.azurePortal, \r\n['Initiative'] = properties.statusPerInitiative.policyInitiativeName,\r\n['Type'] = properties.metadata.assessmentType  \r\n| extend Link = strcat(\"https://\",Link)\r\n| extend PolicyDef = strcat(\"https://portal.azure.com/#blade/Microsoft_Azure_Policy/PolicyDetailBlade/definitionId/\",url_encode_component(tostring(PolicyDefID)))\r\n| distinct TenantID, subscriptionId, AssessmentID, tostring(DisplayName),tostring(PolicyDefID), tostring(Description), tostring(PolicyDef)",
                  "size": 0,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "TenantID",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "AssessmentID",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "DisplayName",
                        "formatter": 7,
                        "formatOptions": {
                          "linkTarget": "GenericDetails",
                          "linkIsContextBlade": true
                        }
                      },
                      {
                        "columnMatch": "PolicyDefID",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "Description",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "PolicyDef",
                        "formatter": 7,
                        "formatOptions": {
                          "linkTarget": "Url",
                          "linkLabel": "Deep link to the Policy Definition"
                        }
                      },
                      {
                        "columnMatch": "Type",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "ResourceName",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "ResourceGroup",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "ContainsNestedRecom",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "StatusCode",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "StatusDescription",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "Remediation",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "Severity",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "Link",
                        "formatter": 7,
                        "formatOptions": {
                          "linkTarget": "Url",
                          "linkLabel": "Link to the custom policy"
                        }
                      },
                      {
                        "columnMatch": "Initiative",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "tmp",
                        "formatter": 7,
                        "formatOptions": {
                          "linkTarget": "Url"
                        }
                      }
                    ],
                    "hierarchySettings": {
                      "treeType": 1,
                      "groupBy": [
                        "DisplayName"
                      ]
                    },
                    "labelSettings": [
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "DisplayName",
                        "label": "Display Name"
                      },
                      {
                        "columnId": "PolicyDefID",
                        "label": "Policy DefinitionID"
                      },
                      {
                        "columnId": "PolicyDef",
                        "label": "Policy Definition"
                      }
                    ]
                  }
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "Custom Policies"
                },
                "name": "query - 2"
              }
            ]
          },
          "name": "group - 5"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 1,
                "content": {
                  "json": "## Regulatory Compliance Assessments State"
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "Regulatory Compliance Assessment State"
                },
                "name": "text - 0"
              },
              {
                "type": 1,
                "content": {
                  "json": "This table returns regulatory compliance assessments state per compliance standard and control.\r\n\r\n"
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "Regulatory Compliance Assessment State"
                },
                "name": "text - 1"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "securityresources\r\n| where type == \"microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments\"\r\n| extend assessmentName=properties.description,\r\n    complianceStandard=extract(@\"/regulatoryComplianceStandards/(.+)/regulatoryComplianceControls\",1,id),\r\n    complianceControl=extract(@\"/regulatoryComplianceControls/(.+)/regulatoryComplianceAssessments\",1,id),\r\n    skippedResources=properties.skippedResources,\r\n    passedResources=properties.passedResources,\r\n    failedResources=properties.failedResources,\r\n    state=properties.state\r\n| project tenantId, subscriptionId, id, complianceStandard, complianceControl, assessmentName, state, skippedResources, passedResources, failedResources",
                  "size": 0,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "tenantId",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "id",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "RecommendationName",
                        "formatter": 7,
                        "formatOptions": {
                          "linkTarget": "GenericDetails",
                          "linkIsContextBlade": true
                        }
                      }
                    ],
                    "hierarchySettings": {
                      "treeType": 1,
                      "groupBy": [
                        "complianceStandard",
                        "complianceControl"
                      ]
                    },
                    "labelSettings": [
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "complianceStandard",
                        "label": "Compliance Standard"
                      },
                      {
                        "columnId": "complianceControl",
                        "label": "Compliance Control"
                      },
                      {
                        "columnId": "assessmentName",
                        "label": "Recommendation Name"
                      },
                      {
                        "columnId": "state",
                        "label": "State"
                      },
                      {
                        "columnId": "skippedResources",
                        "label": "Skipped Resources"
                      },
                      {
                        "columnId": "passedResources",
                        "label": "Passed Resources"
                      },
                      {
                        "columnId": "failedResources",
                        "label": "Failed Resources"
                      }
                    ]
                  }
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "Regulatory Compliance Assessment State"
                },
                "name": "query - 2"
              }
            ]
          },
          "name": "group - 6"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 1,
                "content": {
                  "json": "## Policies by Effect\r\n\r\nThis table shows the list of policies and their effects"
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "Policies by Effect"
                },
                "name": "text - 0"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "policyresources\r\n| where type =~ 'microsoft.authorization/policyassignments'\r\n| extend [\"Display Name\"] = tostring(properties.displayName)\r\n//| where AssignedBy == \"Security Center\"\r\n| extend Scope = properties.scope\r\n| project [\"Subscription\"]=subscriptionId, [\"Policy Definion Id\"]=tostring(tolower(properties.policyDefinitionId)), Scope\r\n| join (policyresources \r\n| where type == \"microsoft.authorization/policydefinitions\"\r\n| extend Effect = tostring(properties.policyRule.then.effect)\r\n| extend id = tolower(id)\r\n| project [\"Display Name\"] = tostring(properties.displayName), Effect, id) on $left.[\"Policy Definion Id\"] == $right.id",
                  "size": 0,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "$gen_group",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "Subscription",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "id1",
                        "formatter": 5
                      }
                    ],
                    "hierarchySettings": {
                      "treeType": 1,
                      "groupBy": [
                        "Effect",
                        "Subscription"
                      ]
                    }
                  }
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "Policies by Effect"
                },
                "name": "query - 1"
              }
            ]
          },
          "name": "group - 7"
        }
      ],
      "isLocked": false,
      "fallbackResourceIds": [
        "Azure Security Center"
      ]
    }
  },
  "resources": [
    {
      "name": "[parameters('workbookId')]",
      "type": "microsoft.insights/workbooks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2021-03-08",
      "dependsOn": [],
      "kind": "shared",
      "properties": {
        "displayName": "[parameters('workbookDisplayName')]",
        "serializedData": "[string(variables('workbookContent'))]",
        "version": "1.0",
        "sourceId": "[parameters('workbookSourceId')]",
        "category": "[parameters('workbookType')]"
      }
    }
  ],
  "outputs": {
    "workbookId": {
      "type": "string",
      "value": "[resourceId( 'microsoft.insights/workbooks', parameters('workbookId'))]"
    }
  },
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
}

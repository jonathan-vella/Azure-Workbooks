{
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workbookDisplayName": {
      "type": "string",
      "defaultValue": "Network Security Dashboard",
      "metadata": {
        "description": "The friendly name for the workbook that is used in the Gallery or Saved List.  This name must be unique within a resource group."
      }
    },
    "workbookType": {
      "type": "string",
      "defaultValue": "workbook",
      "metadata": {
        "description": "The gallery that the workbook will been shown under. Supported values include workbook, tsg, etc. Usually, this is 'workbook'"
      }
    },
    "workbookSourceId": {
      "type": "string",
      "defaultValue": "Azure Security Center",
      "metadata": {
        "description": "The id of resource instance to which the workbook will be associated"
      }
    },
    "workbookId": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this workbook instance"
      }
    }
  },
  "variables": {
    "workbookContent": {
      "version": "Notebook/1.0",
      "items": [
        {
          "type": 1,
          "content": {
            "json": "## Network Security Dashboard"
          },
          "name": "text - 0"
        },
        {
          "type": 1,
          "content": {
            "json": "<svg viewBox=\"0 0 19 19\" width=\"20\" class=\"fxt-escapeShadow\" role=\"presentation\" focusable=\"false\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\"><g><path fill=\"#1b93eb\" d=\"M16.82 8.886c0 4.81-5.752 8.574-7.006 9.411a.477.477 0 01-.523 0C8.036 17.565 2.18 13.7 2.18 8.886V3.135a.451.451 0 01.42-.419C7.2 2.612 6.154.625 9.5.625s2.3 1.987 6.8 2.091a.479.479 0 01.523.419z\"></path><path fill=\"url(#0024423711759027356)\" d=\"M16.192 8.99c0 4.392-5.333 7.947-6.483 8.575a.319.319 0 01-.418 0c-1.15-.732-6.483-4.183-6.483-8.575V3.762a.575.575 0 01.313-.523C7.2 3.135 6.258 1.357 9.4 1.357s2.2 1.882 6.274 1.882a.45.45 0 01.419.418z\"></path><path d=\"M9.219 5.378a.313.313 0 01.562 0l.875 1.772a.314.314 0 00.236.172l1.957.284a.314.314 0 01.174.535l-1.416 1.38a.312.312 0 00-.09.278l.334 1.949a.313.313 0 01-.455.33l-1.75-.92a.314.314 0 00-.292 0l-1.75.92a.313.313 0 01-.455-.33L7.483 9.8a.312.312 0 00-.09-.278L5.977 8.141a.314.314 0 01.174-.535l1.957-.284a.314.314 0 00.236-.172z\" class=\"msportalfx-svg-c01\"></path></g></svg>&nbsp;<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> Please take time to answer a quick survey,\r\n</span>[<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> click here. </span>](http://aka.ms/NetSecWorkbookSurvey)"
          },
          "name": "Survey"
        },
        {
          "type": 9,
          "content": {
            "version": "KqlParameterItem/1.0",
            "parameters": [
              {
                "id": "f650f0bc-dd38-45db-8837-7133061a3784",
                "version": "KqlParameterItem/1.0",
                "name": "Subscription",
                "type": 6,
                "isRequired": true,
                "multiSelect": true,
                "quote": "'",
                "delimiter": ",",
                "value": [
                  "value::all"
                ],
                "typeSettings": {
                  "additionalResourceOptions": [
                    "value::all"
                  ],
                  "includeAll": true
                },
                "timeContext": {
                  "durationMs": 86400000
                }
              },
              {
                "id": "e59a6815-d20e-4969-a943-d1505cf016d9",
                "version": "KqlParameterItem/1.0",
                "name": "Info",
                "type": 10,
                "isRequired": true,
                "value": "Off",
                "typeSettings": {
                  "additionalResourceOptions": [],
                  "showDefault": false
                },
                "jsonData": "[[\r\n { \"value\": \"Off\", \"label\": \"Off\"},\r\n { \"value\": \"FAQ\", \"label\": \"FAQ\"},\r\n { \"value\": \"Change Log\", \"label\": \"Change Log\"}\r\n]"
              }
            ],
            "style": "above",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          "name": "Parameters"
        },
        {
          "type": 1,
          "content": {
            "json": "### Change Log \r\n\r\n|Version|Description|\r\n|---|---|\r\n|v1.0| Public availability of network security dashboard| \r\n|v1.1| Modification around Route Tables, Added Network Security Groups, Added PaaS Services| \r\n|v1.2| Added support for PaaS Firewalls and Virtual WAN|\r\n|v1.3| Added support for App Services|\r\n|v1.4| Added support for Key Vaults|\r\n",
            "style": "info"
          },
          "conditionalVisibility": {
            "parameterName": "Info",
            "comparison": "isEqualTo",
            "value": "Change Log"
          },
          "name": "ChangeLog"
        },
        {
          "type": 1,
          "content": {
            "json": "### FAQ\r\n\r\nUse this workbook to have an aggrgated view across your all network security resources including security recommendations!\r\n\r\n#### Q: What is the data source for this workbook?\r\n* **Answer**: This workbook utlizes Azure Resource Graph (ARG) queries to show real-time network security and network assests and thier configuration.\r\n\r\n#### Q: Can I edit or update the queries in the workbook?\r\n* **Answer**: Yes, you can customize this workbook and its queries by clicking on the editing the workbook and then clicking on the Edit button for a specific query you want to update.\r\n\r\n#### Q: How do I get future versions of this workbook?\r\n* **Answer**:  This workbook is available on the community repository (GitHub), any new versions will be available at [this](https://github.com/Azure/Azure-Security-Center/tree/main/Workbooks) location and you will be able to re-deploy a new version anytime you want.\r\n\r\n#### Q: How do I provide feedback?\r\n* **Answer**: You can provide feedback by using the attached survey link in the top section of the workbook or by clicking [here](http://aka.ms/NetSecWorkbookSurvey).\r\n\r\n#### Q: How do I get support?\r\n* **Answer**: All artifacts within the community repository are provided as is, without SLA or official support. However, if you have an issue please fill out a [bug report](https://github.com/Azure/Azure-Security-Center/issues/new?assignees=&labels=&template=bug_report.md&title=Network security workbook) and the community will try to solve it.",
            "style": "info"
          },
          "conditionalVisibility": {
            "parameterName": "Info",
            "comparison": "isEqualTo",
            "value": "FAQ"
          },
          "name": "FAQ"
        },
        {
          "type": 11,
          "content": {
            "version": "LinkItem/1.0",
            "style": "tabs",
            "links": [
              {
                "id": "10327716-beb4-4f57-912c-8d7a06ec26f0",
                "cellValue": "SelectedView",
                "linkTarget": "parameter",
                "linkLabel": "Overview",
                "subTarget": "Overview",
                "style": "link"
              },
              {
                "id": "0afbd0cc-9ef6-4208-b0bd-48432e4ea4c1",
                "cellValue": "SelectedView",
                "linkTarget": "parameter",
                "linkLabel": "Public IPs & Exposed Ports",
                "subTarget": "PublicIPsView",
                "style": "link"
              },
              {
                "id": "5ebdcd81-36a4-4b6f-b386-4a5826d2acb3",
                "cellValue": "SelectedView",
                "linkTarget": "parameter",
                "linkLabel": "Network Security Services",
                "subTarget": "NetSecSvcView",
                "style": "link"
              },
              {
                "id": "397241cf-b5e7-489a-855e-6931ae783261",
                "cellValue": "SelectedView",
                "linkTarget": "parameter",
                "linkLabel": "Internal Networking",
                "subTarget": "InternalNetworkingView",
                "style": "link"
              },
              {
                "id": "eed7f5e2-cad9-4dc1-bc53-419f8374be8d",
                "cellValue": "SelectedView",
                "linkTarget": "parameter",
                "linkLabel": "Gateway/VPN services",
                "subTarget": "GatewayVPNView",
                "style": "link"
              },
              {
                "id": "050647bc-c895-4f1c-b3d7-d62b3efeefe8",
                "cellValue": "SelectedView",
                "linkTarget": "parameter",
                "linkLabel": "Virtual WAN",
                "subTarget": "VirtualWANView",
                "style": "link"
              },
              {
                "id": "97d3c78c-6f12-47bf-b9d1-aed0f69e711b",
                "cellValue": "SelectedView",
                "linkTarget": "parameter",
                "linkLabel": "Traffic Manager",
                "subTarget": "TrafficManagerView",
                "style": "link"
              },
              {
                "id": "ad7bb535-63ea-44e5-bbea-fec55c2372e1",
                "cellValue": "SelectedView",
                "linkTarget": "parameter",
                "linkLabel": "PaaS Services",
                "subTarget": "PaaSServicesView",
                "style": "link"
              },
              {
                "id": "863d7ca0-7a51-44d4-989c-fc8806548be8",
                "cellValue": "SelectedView",
                "linkTarget": "parameter",
                "linkLabel": "Security Recommendations",
                "subTarget": "RecommendationsView",
                "style": "link"
              }
            ]
          },
          "name": "MainMenu"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 11,
                "content": {
                  "version": "LinkItem/1.0",
                  "style": "tabs",
                  "links": [
                    {
                      "id": "76abf4ed-da91-4865-a568-882444316830",
                      "cellValue": "SelectedSubMenu",
                      "linkTarget": "parameter",
                      "linkLabel": "Public IP and Asset Types",
                      "subTarget": "PublicIPAssetTypes",
                      "style": "link"
                    },
                    {
                      "id": "1726eac9-b3f3-4420-8bb7-37dd8675f462",
                      "cellValue": "SelectedSubMenu",
                      "linkTarget": "parameter",
                      "linkLabel": "Ports Exposed to the Internet",
                      "subTarget": "PortsExposed",
                      "style": "link"
                    }
                  ]
                },
                "name": "links - 2"
              },
              {
                "type": 1,
                "content": {
                  "json": "This view presents inbound rules on different Azure resources. Please view each table to see rule configuration and ports that are open.\r\n\r\n---\r\n\r\n**As a security best practice, reduce the number of ports exposed to the internet to reduce the risk vulnerabilities and attacks. [Learn more](https://docs.microsoft.com/en-us/azure/security/fundamentals/network-best-practices)**",
                  "style": "upsell"
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "PortsExposed"
                },
                "name": "PortsExposedBanner"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"microsoft.network/azurefirewalls\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend ipConfigurations = properties.ipConfigurations\r\n| extend FirewallSKU = tostring(properties.sku.tier)\r\n| where FirewallSKU contains \"Standard\"\r\n| extend natRuleCollections = properties.natRuleCollections\r\n| where natRuleCollections contains \"\"\r\n| mv-expand bagexpansion=array natRuleCollections\r\n| extend natRules = natRuleCollections.properties.rules\r\n| mv-expand bagexpansion=array natRules\r\n| extend DNATRuleName = tostring(natRules.name)\r\n| extend DNATRuleFirewallPort = tostring(natRules.destinationPorts)\r\n| extend DNATRuleFirewallIP = tostring(natRules.destinationAddresses)\r\n| extend DNATRuleSourceIP = tostring(natRules.sourceAddresses)\r\n| extend DNATRuleSourceIPGroup = tostring(natRules.sourceIpGroups)\r\n| extend DNATRuleDestinationIP = tostring(natRules.translatedAddress)\r\n| extend DNATRuleDestinationPort = tostring(natRules.translatedPort)\r\n| extend DNATRuleProtocol = tostring(natRules.protocols)\r\n| project-away kind, managedBy, plan, properties, identity, zones, extendedLocation, ipConfigurations, natRuleCollections, natRules, tenantId, tags, sku, name, resourceGroup, apiVersion",
                  "size": 0,
                  "title": "DNAT Rules on Azure Firewall Standard with Classic Rules",
                  "noDataMessage": "No Azure Firewal Std. were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "subnetid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      }
                    ]
                  }
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "PortsExposed"
                },
                "name": "DNAT Rules on Azure Firewall Standard"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"microsoft.network/firewallpolicies\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend PolicySKU = tostring(properties.sku.tier)\r\n| extend Firewalls = properties.firewalls\r\n| extend RCGroups = properties.ruleCollectionGroups\r\n| mvexpand bagexpansion=array RCGroups, Firewalls\r\n| extend FirewallId = Firewalls.id\r\n| extend DNATRuleCollectionGroupId = RCGroups.id\r\n| where DNATRuleCollectionGroupId contains \"Dnat\"\r\n| project-away kind, managedBy, sku, plan, properties, zones, extendedLocation, RCGroups, Firewalls, tags, identity, tenantId, name, resourceGroup\r\n",
                  "size": 0,
                  "title": "DNAT Rule Collection Groups in Azure Firewall Standard and Premium Policy",
                  "noDataMessage": "No Azure Firewall Policies were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "FirewallId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkColumn": "FirewallId",
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "DNATRuleCollectionGroupId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "PolicySKU",
                        "label": "Policy SKU"
                      },
                      {
                        "columnId": "FirewallId",
                        "label": "Firewall"
                      },
                      {
                        "columnId": "DNATRuleCollectionGroupId",
                        "label": "DNAT Rule Collection Group"
                      }
                    ]
                  }
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "PortsExposed"
                },
                "name": "DNAT Rule Collection Groups in Standard and Premium Policy"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress)\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend publicipaddress = tostring(properties.ipAddress)\r\n| extend sku = tostring(sku.name)\r\n| extend pipallocationmethod = tostring(properties.publicIPAllocationMethod)\r\n| extend ipConfiguration = parse_json(properties.ipConfiguration.id)\r\n| extend BrkipConfig = split(ipConfiguration, '/')\r\n| extend assetprovider = tostring(BrkipConfig[6])\r\n| extend typeassetassociatedwith = iif(isempty(tostring(BrkipConfig[7])),\"not associated\",tostring(BrkipConfig[7]))\r\n| extend nameassetassociatedwith = substring(properties.ipConfiguration.id, 0, indexof(properties.ipConfiguration.id, '/ipConfigurations'))\r\n| extend dnsname = tostring(properties.dnsSettings.fqdn)\r\n| project-away name, tenantId, kind, resourceGroup, managedBy, apiVersion, plan, properties, tags, identity, zones, extendedLocation, ipConfiguration, BrkipConfig, assetprovider, sku\r\n//| project Resource = id, location, publicipaddress, pipallocationmethod, dnsname, sku, nameassetassociatedwith, typeassetassociatedwith, subscriptionId, ResourceGroup = RG",
                  "size": 2,
                  "title": "List of Public IPs",
                  "noDataMessage": "No Public IPs were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "pipallocationmethod",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Static",
                              "representation": "more"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Dynamic",
                              "representation": "Normal"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "Blank",
                              "text": "{0}{1}"
                            }
                          ],
                          "compositeBarSettings": {
                            "labelText": "",
                            "columnSettings": []
                          }
                        }
                      },
                      {
                        "columnMatch": "typeassetassociatedwith",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "resourceGroup",
                        "formatter": 14,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      }
                    ],
                    "rowLimit": 5000,
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "publicipaddress",
                        "label": "Public IP Address"
                      },
                      {
                        "columnId": "pipallocationmethod",
                        "label": "Allocation Method"
                      },
                      {
                        "columnId": "typeassetassociatedwith",
                        "label": "Associated with Type"
                      },
                      {
                        "columnId": "nameassetassociatedwith",
                        "label": "Associated with Resource"
                      },
                      {
                        "columnId": "dnsname",
                        "label": "DNS Name"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "PublicIPAssetTypes"
                },
                "name": "PublicIPs"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"microsoft.network/frontdoors\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend FrontDoorId = tostring(properties.frontdoorId)\r\n| extend FrontDoorDNSName = tostring(properties.cName)\r\n| extend FrontDoorFriendlyName = tostring(properties.friendlyName)\r\n| extend FrontDoorResourceState = tostring(properties.resourceState)\r\n| extend frontendEndpoints = properties.frontendEndpoints.[0]\r\n| extend routingRules = properties.routingRules.[0]\r\n| extend backendPools = properties.backendPools.[0]\r\n| extend FrontendHostName = tostring(frontendEndpoints.properties.hostName)\r\n| extend FrontendWAFPolicyId = frontendEndpoints.properties.webApplicationFirewallPolicyLink.id\r\n| extend FrontendConfigName = tostring(frontendEndpoints.name)\r\n| extend FrontendResourceState = tostring(frontendEndpoints.properties.resourceState)\r\n| extend FrontendResourceId = frontendEndpoints.id\r\n| extend RoutingProtocol = routingRules.properties.acceptedProtocols\r\n| extend RoutingPattern = routingRules.properties.patternsToMatch\r\n| mvexpand bagexpansion=array RoutingProtocol, RoutingPattern\r\n| extend RoutingResourceState = tostring(routingRules.properties.resourceState)\r\n| extend backends = backendPools.properties.backends.[0]\r\n| extend BackendAddress = tostring(backends.address)\r\n| extend BackendHTTPPort = tostring(backends.httpPort)\r\n| extend BackendHTTPSPort = tostring(backends.httpsPort)\r\n| extend BackendCertNameCheck = tostring(properties.backendPoolsSettings.enforceCertificateNameCheck)\r\n| extend BackendSendRecvTimeoutSeconds = tostring(properties.backendPoolsSettings.sendRecvTimeoutSeconds)\r\n| extend BackendHostHeader = tostring(backends.backendHostHeader)\r\n| extend BackendPoolName = tostring(backendPools.name)\r\n| extend BackendResourceState = tostring(backendPools.properties.resourceState)\r\n| extend BackendResourceId = backendPools.id\r\n| project-away kind, managedBy, sku, plan, properties, identity, zones, extendedLocation, frontendEndpoints, routingRules, backendPools, backends, tenantId, tags, name, resourceGroup",
                  "size": 0,
                  "title": "Front Door Rules",
                  "noDataMessage": "No Front Doors were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "FrontendWAFPolicyId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "FrontendResourceId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "BackendResourceId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "resourceGroup",
                        "formatter": 14,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "FrontDoorId",
                        "label": "FrontDoor Id"
                      },
                      {
                        "columnId": "FrontDoorDNSName",
                        "label": "FrontDoor DNS Name"
                      }
                    ]
                  }
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "PortsExposed"
                },
                "name": "FrontDoorRules"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"microsoft.network/applicationgateway\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend backendAddressPools = properties.backendAddressPools\r\n| extend frontendIPConfigurations = properties.frontendIPConfigurations\r\n| extend frontendPorts = properties.frontendPorts\r\n| extend backendHttpSettingsCollection = properties.backendHttpSettingsCollection\r\n| extend httpListeners = properties.httpListeners\r\n| mv-expand bagexpansion=array frontendIPConfigurations, frontendPorts, backendAddressPools, backendHttpSettingsCollection\r\n| extend PIPid = tostring(frontendIPConfigurations.properties.publicIPAddress.id)\r\n| join ( Resources | where type=='microsoft.network/publicipaddresses' | extend PublicIPAddress=tostring(properties.ipAddress) | project PIPid=id,PublicIPAddress ) on PIPid\r\n| extend ListenerPort = tostring(frontendPorts.properties.port)\r\n| extend BackendPoolName = tostring(backendAddressPools.name)\r\n| extend BackendPoolIPAddress = tostring(backendAddressPools.properties.backendAddresses.[0].ipAddress)\r\n| extend BackendPoolFQDN = tostring(backendAddressPools.properties.backendAddresses.[0].fqdn)\r\n| extend BackendPort = tostring(backendHttpSettingsCollection.properties.port)\r\n| extend BackendProtocol = tostring(backendHttpSettingsCollection.properties.protocol)\r\n| extend HTTPHostName = tostring(backendHttpSettingsCollection.properties.hostName)\r\n| project-away frontendIPConfigurations, frontendPorts, httpListeners, backendAddressPools, backendHttpSettingsCollection, PIPid, PIPid1, extendedLocation, zones, identity, properties, managedBy, kind, tenantId, tags, name, sku, plan, resourceGroup",
                  "size": 0,
                  "title": "Application Gateway Rules",
                  "noDataMessage": "No Application Gateways were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      }
                    ]
                  }
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "PortsExposed"
                },
                "name": "ApplicationGatewayRules"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains 'microsoft.network/loadbalancers'\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend loadBalancingRules = properties.loadBalancingRules\r\n| extend NatRules = properties.inboundNatRules\r\n| extend frontendIPConfig = properties.frontendIPConfigurations\r\n| mv-expand bagexpansion=array loadBalancingRules, NatRules\r\n| extend LBrulename = tostring(loadBalancingRules.name)\r\n| extend LBruleprotocol = tostring(loadBalancingRules.properties.protocol)\r\n| extend LBrulefrontendPort = tostring(loadBalancingRules.properties.frontendPort)\r\n| extend LBrulebackendPort = tostring(loadBalancingRules.properties.backendPort)\r\n| extend LBrulebackendPool = tostring(loadBalancingRules.properties.backendAddressPool.id)\r\n| extend Natrulename = tostring(NatRules.name)\r\n| extend Natruleprotocol = tostring(NatRules.properties.protocol)\r\n| extend NatrulefrontendPort = tostring(NatRules.properties.frontendPort)\r\n| extend NatrulebackendPort = tostring(NatRules.properties.backendPort)\r\n| extend NatrulebackendConfig = NatRules.properties.backendIPConfiguration.id\r\n| extend frontendIPConfig = properties.frontendIPConfigurations\r\n| mv-expand bagexpansion=array frontendIPConfig\r\n| extend frontendIPAllocation = tostring(frontendIPConfig.properties.privateIPAllocationMethod)\r\n| extend frontendprivateIPAddress = tostring(frontendIPConfig.properties.privateIPAddress)\r\n| extend frontendpublicIPResource = tostring(frontendIPConfig.properties.publicIPAddress.id)\r\n| join ( Resources | where type=='microsoft.network/publicipaddresses' | extend frontendPublicIPAddress=tostring(properties.ipAddress) | project frontendpublicIPResource=id,frontendPublicIPAddress ) on frontendpublicIPResource\r\n| project-away kind, managedBy, apiVersion, identity, zones, frontendpublicIPResource, frontendpublicIPResource1, tenantId, properties, tags, extendedLocation, plan, loadBalancingRules, NatRules, frontendIPConfig, name, resourceGroup, sku",
                  "size": 0,
                  "title": "Load Balancer Inbound NAT Rules",
                  "noDataMessage": "No Load Balancers were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "LBrulebackendPool",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "NatrulebackendConfig",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "LBrulename",
                        "label": "LB Rule Name"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "PortsExposed"
                },
                "name": "LoadBalancerRules"
              },
              {
                "type": 1,
                "content": {
                  "json": "As a security best practice, reduce the number of “any-any” rules on your network security groups (NSGs). Check the [All network ports should be restricted on network security groups associated to your virtual machine](https://ms.portal.azure.com/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/3b20e985-f71f-483b-b078-f30d73936d43) recommendation to view unhealthy resources alongside with remediation steps.",
                  "style": "upsell"
                },
                "name": "NetworkPortsBanner"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains 'microsoft.network/Networksecuritygroups'\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend nic = properties.networkInterfaces\r\n| mv-expand nic\r\n| extend NICId = nic.id\r\n| extend udrulesubnetids = properties.subnets\r\n| extend udrules = properties.securityRules\r\n| mv-expand udrules\r\n| extend UserDefinedRuleName = tostring(udrules.name)\r\n| extend UDRuleProtocol = tostring(udrules.properties.protocol)\r\n| extend UDRuleDestinationPort = tostring(udrules.properties.destinationPortRange)\r\n| extend UDRuleDestinationPortList = tostring(udrules.properties.destinationPortRanges)\r\n| extend UDRuleDirection = tostring(udrules.properties.direction)\r\n| extend UDRuleSourceNetwork = tostring(udrules.properties.sourceAddressPrefix)\r\n| extend UDRuleDestinationNetwork = tostring(udrules.properties.destinationAddressPrefix)\r\n| extend UDRuleAccess = tostring(udrules.properties.access)\r\n| project-away udrules, kind, managedBy, nic, identity, zones, name, tenantId, tags, extendedLocation, properties, sku, plan, udrulesubnetids, resourceGroup",
                  "size": 0,
                  "title": "Network Security Group Inbound Security Rules",
                  "noDataMessage": "No NSGs were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "NICId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "udrulenicid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "rowLimit": 5000,
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "PortsExposed"
                },
                "name": "NSGRules"
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "SelectedView",
            "comparison": "isEqualTo",
            "value": "PublicIPsView"
          },
          "name": "PortsPublicIP"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 11,
                "content": {
                  "version": "LinkItem/1.0",
                  "style": "tabs",
                  "links": [
                    {
                      "id": "9a80c38d-b158-4483-9380-bcdfd898dc79",
                      "cellValue": "SelectedSubMenu",
                      "linkTarget": "parameter",
                      "linkLabel": "DDoS Protection Plans",
                      "subTarget": "DDoS",
                      "style": "link"
                    },
                    {
                      "id": "38937ced-0f1a-4c38-bc4f-9cea6b910d2f",
                      "cellValue": "SelectedSubMenu",
                      "linkTarget": "parameter",
                      "linkLabel": "Azure Firewalls and Firewall Policies",
                      "subTarget": "Firewall",
                      "style": "link"
                    },
                    {
                      "id": "0f1707b6-87fe-4de0-8077-1b2dd55fc5e0",
                      "cellValue": "SelectedSubMenu",
                      "linkTarget": "parameter",
                      "linkLabel": "Azure WAF Policies",
                      "subTarget": "WAF",
                      "style": "link"
                    },
                    {
                      "id": "751ca64a-7060-4df9-b96d-34061751f1f0",
                      "cellValue": "SelectedSubMenu",
                      "linkTarget": "parameter",
                      "linkLabel": "Network Security Groups",
                      "subTarget": "NSG",
                      "style": "link"
                    }
                  ]
                },
                "name": "NetSecSubMenu"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"microsoft.network/ddosprotectionplans\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend virtualNetworks = properties.virtualNetworks\r\n| mvexpand bagexpansion=array virtualNetworks\r\n| extend VNETid = virtualNetworks.id\r\n| project-away kind, managedBy, sku, plan, identity, zones, extendedLocation, name, tenantId, properties, tags, virtualNetworks, resourceGroup",
                  "size": 0,
                  "title": "DDoS Protection Plans with Virtual Networks",
                  "noDataMessage": "No DDoS Protection Plans were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "VNETid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "VNETid",
                        "label": "Virtual Networks"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "DDoS"
                },
                "name": "DDoSPlans"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type == \"microsoft.network/frontdoorwebapplicationfirewallpolicies\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend WAFPolicyName = name\r\n| extend FrontDoorEndpoint = properties.frontendEndpointLinks.[0].id\r\n| extend WAFMode = tostring(properties.policySettings.mode)\r\n| extend CustomBlockResponseCode = tostring(properties.policySettings.customBlockResponseStatusCode)\r\n| extend CustomBlockResponseBody = tostring(properties.policySettings.customBlockResponseBody)\r\n| extend RedirectURL = properties.policySettings.redirectUrl\r\n| extend ManagedRuleSets = properties.managedRules.managedRuleSets\r\n| mvexpand bagexpansion=array ManagedRuleSets\r\n| extend ManagedRuleSetVersion = tostring(ManagedRuleSets.ruleSetVersion)\r\n| extend ManagedRuleSetType = tostring(ManagedRuleSets.ruleSetType)\r\n| extend ManagedRuleSetExclusions = tostring(ManagedRuleSets.exclusions)\r\n| extend ManagedRuleSetGroupOverrides = tostring(ManagedRuleSets.ruleGroupOverrides)\r\n| extend CustomRules = tostring(properties.customRules.rules)\r\n| project-away kind, managedBy, sku, plan, properties, identity, zones, extendedLocation, ManagedRuleSets, tenantId, tags, name, resourceGroup",
                  "size": 0,
                  "title": "Front Door WAF Policies",
                  "noDataMessage": "No Front Door WAF Policies were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "FrontDoorEndpoint",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "WAFPolicyName",
                        "label": "WAF Policy Name"
                      },
                      {
                        "columnId": "FrontDoorEndpoint",
                        "label": "Front Door Endpoint"
                      },
                      {
                        "columnId": "WAFMode",
                        "label": "WAF Mode"
                      }
                    ]
                  }
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "WAF"
                },
                "name": "FrontDoorWAFPolicy"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type == \"microsoft.network/applicationgatewaywebapplicationfirewallpolicies\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend AppGWid = properties.applicationGateways.[0].id\r\n| extend WAFMode = tostring(properties.policySettings.mode)\r\n| extend MaxRequestBodySizeInKB = tostring(properties.policySettings.maxRequestBodySizeInKb)\r\n| extend FileUploadLimitInMB = tostring(properties.policySettings.fileUploadLimitInMb)\r\n| extend RequestBodyCheck = tostring(properties.policySettings.requestBodyCheck)\r\n| extend ManagedRulesExclusions = tostring(properties.managedRules.exclusions)\r\n| extend ManagedRuleSets = properties.managedRules.managedRuleSets\r\n| mvexpand bagexpansion=array ManagedRuleSets\r\n| extend ManagedRuleSetVersion = tostring(ManagedRuleSets.ruleSetVersion)\r\n| extend ManagedRuleSetType = tostring(ManagedRuleSets.ruleSetType)\r\n| extend ManagedRuleSetGroupOverrides = tostring(ManagedRuleSets.ruleGroupOverrides)\r\n| extend CustomRules = tostring(properties.customRules)\r\n| project-away kind, managedBy, sku, plan, properties, identity, zones, extendedLocation, ManagedRuleSets, tenantId, name, tags, resourceGroup",
                  "size": 0,
                  "title": "Application Gateway WAF Policies",
                  "noDataMessage": "No Application Gateway WAF Policies were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "AppGWid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Location"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "AppGWid",
                        "label": "Application Gateway"
                      },
                      {
                        "columnId": "WAFMode",
                        "label": "WAF Mode"
                      }
                    ]
                  }
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "WAF"
                },
                "name": "AppGatewayWAFPolicy"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"microsoft.network/azurefirewalls\"\r\n| extend ResourceGroup = substring(id, 0, indexof(id, '/providers'))\r\n| extend ipConfigurations = properties.ipConfigurations\r\n| extend FirewallSKU = tostring(properties.sku.tier)\r\n| extend ThreatIntelMode = tostring(properties.threatIntelMode)\r\n| extend DNSConfig = properties.additionalProperties\r\n| mv-expand bagexpansion=array ipConfigurations\r\n| extend PIPid = tostring(ipConfigurations.properties.publicIPAddress.id)\r\n| join ( Resources | where type=='microsoft.network/publicipaddresses' | extend PublicIPAddress=tostring(properties.ipAddress) | project PIPid=id,PublicIPAddress ) on PIPid\r\n| extend PrivateIP = tostring(ipConfigurations.properties.privateIPAddress)\r\n| extend PrivateIPAllocation = tostring(ipConfigurations.properties.privateIPAllocationMethod)\r\n| extend SubnetId = ipConfigurations.properties.subnet.id\r\n| project-away kind, managedBy, plan, sku, properties, identity, zones, extendedLocation, ipConfigurations, PIPid, PIPid1, tags, tenantId, name, resourceGroup",
                  "size": 0,
                  "title": "Azure Firewalls",
                  "noDataMessage": "No Azure Firewalls were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "ResourceGroup",
                        "formatter": 14,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "SubnetId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "ResourceGroup",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "FirewallSKU",
                        "label": "Firewall SKU"
                      },
                      {
                        "columnId": "ThreatIntelMode",
                        "label": "Threat Intel Mode"
                      },
                      {
                        "columnId": "DNSConfig",
                        "label": "DNS Config"
                      },
                      {
                        "columnId": "PublicIPAddress",
                        "label": "Public IP Address"
                      },
                      {
                        "columnId": "PrivateIP",
                        "label": "Private IP"
                      },
                      {
                        "columnId": "PrivateIPAllocation",
                        "label": "Private IP Allocation"
                      },
                      {
                        "columnId": "SubnetId",
                        "label": "Subnet"
                      }
                    ]
                  }
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "Firewall"
                },
                "name": "AzureFirewalls"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"microsoft.network/firewallpolicies\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend PolicySKU = tostring(properties.sku.tier)\r\n| extend Firewalls = properties.firewalls\r\n| extend RCGroups = properties.ruleCollectionGroups\r\n| mvexpand bagexpansion=array RCGroups, Firewalls\r\n| extend FirewallId = Firewalls.id\r\n| extend RuleCollectionGroups = RCGroups.id\r\n| extend ThreatIntelMode = tostring(properties.threatIntelMode)\r\n| extend TIAllowListFQDNs = tostring(properties.threatIntelWhitelist.fqdns)\r\n| extend TIAllowListIPs = properties.threatIntelWhitelist.ipAddresses\r\n| extend CustomDNSServers = tostring(properties.dnsSettings.servers)\r\n| extend DNSProxy = tostring(properties.dnsSettings.enableProxy)\r\n| extend IDPSMode = tostring(properties.intrusionDetection.mode)\r\n| extend IDPSBypass = tostring(properties.intrusionDetection.configuration.bypassTrafficSettings)\r\n| extend IDPSSignatureRules = tostring(properties.intrusionDetection.configuration.signatureOverrides)\r\n| extend TLSInspectionCertName = tostring(properties.transportSecurity.certificateAuthority.name)\r\n| extend TLSInspectionKVSecret = tostring(properties.transportSecurity.certificateAuthority.keyVaultSecretId)\r\n| extend LoggingEnabled = tostring(properties.insights.isEnabled)\r\n| extend LogAnalyticsWorkspace = properties.insights.logAnalyticsResources.defaultWorkspaceId.id\r\n| project-away kind, managedBy, sku, plan, properties, zones, extendedLocation, tenantId, tags, identity, name, RCGroups, Firewalls, resourceGroup",
                  "size": 0,
                  "title": "Standard and Premium Firewall Policies",
                  "noDataMessage": "No Azure Firewalls Policies were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "FirewallId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "RuleCollectionGroups",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "LogAnalyticsWorkspace",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "PolicySKU",
                        "label": "Policy SKU"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "Firewall"
                },
                "name": "AzureFirewallPolicy"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains 'microsoft.network/Networksecuritygroups'\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend nic = properties.networkInterfaces\r\n| mv-expand nic\r\n| extend udrulenicid = nic.id\r\n| project-away kind, managedBy, identity, zones, name, tenantId, tags, extendedLocation, properties, sku, plan, nic, resourceGroup",
                  "size": 0,
                  "title": "Network Security Groups",
                  "noDataMessage": "No NSGs were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "udrulenicid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      }
                    ],
                    "rowLimit": 5000,
                    "filter": true,
                    "sortBy": [
                      {
                        "itemKey": "location",
                        "sortOrder": 1
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "udrulenicid",
                        "label": "Attached NIC"
                      }
                    ]
                  },
                  "sortBy": [
                    {
                      "itemKey": "location",
                      "sortOrder": 1
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "NSG"
                },
                "name": "NSGs"
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "SelectedView",
            "comparison": "isEqualTo",
            "value": "NetSecSvcView"
          },
          "name": "NetSecSvcGroup"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 11,
                "content": {
                  "version": "LinkItem/1.0",
                  "style": "tabs",
                  "links": [
                    {
                      "id": "9a80c38d-b158-4483-9380-bcdfd898dc79",
                      "cellValue": "SelectedSubMenu",
                      "linkTarget": "parameter",
                      "linkLabel": "Network Interfaces",
                      "subTarget": "NIC",
                      "style": "link"
                    },
                    {
                      "id": "0f1707b6-87fe-4de0-8077-1b2dd55fc5e0",
                      "cellValue": "SelectedSubMenu",
                      "linkTarget": "parameter",
                      "linkLabel": "VNet with DDoS Protection, Subnets and Peerings",
                      "subTarget": "VNetDetails",
                      "style": "link"
                    },
                    {
                      "id": "751ca64a-7060-4df9-b96d-34061751f1f0",
                      "cellValue": "SelectedSubMenu",
                      "linkTarget": "parameter",
                      "linkLabel": "Route Tables",
                      "subTarget": "RouteTables",
                      "style": "link"
                    },
                    {
                      "id": "d5434924-e545-4442-bdf1-06aab9b787c4",
                      "cellValue": "SelectedSubMenu",
                      "linkTarget": "parameter",
                      "linkLabel": "Private Links",
                      "subTarget": "PrivateLinks",
                      "style": "link"
                    },
                    {
                      "id": "7e1cbd84-467a-4730-afa0-67b98c1ccafa",
                      "cellValue": "SelectedSubMenu",
                      "linkTarget": "parameter",
                      "linkLabel": "Network Security Groups",
                      "subTarget": "NetworkSecurityGroups",
                      "style": "link"
                    }
                  ]
                },
                "name": "InternalNetworkingSubMenu"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"microsoft.network/networkinterfaces\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend ipConfigurations = properties.ipConfigurations.[0]\r\n| extend PrivateIPAddress = tostring(ipConfigurations.properties.privateIPAddress)\r\n| extend PublicIPAddressid = ipConfigurations.properties.publicIPAddress.id\r\n| extend PrivateIPAddressVersion = tostring(ipConfigurations.properties.privateIPAddressVersion)\r\n| extend PrivateIPAllocationMethod = tostring(ipConfigurations.properties.privateIPAllocationMethod)\r\n| extend Subnet = ipConfigurations.properties.subnet.id\r\n| extend IpConfigid = ipConfigurations.id\r\n| extend InternalDNSSuffix = tostring(properties.dnsSettings.internalDomainNameSuffix)\r\n| extend NSGid = properties.networkSecurityGroup.id\r\n| extend VMid = properties.virtualMachine.id\r\n| extend PrivateEndpointId = properties.privateEndpoint.id\r\n| extend MacAddress = tostring(properties.macAddress)\r\n| extend NicType = tostring(properties.nicType)\r\n| project-away kind, managedBy, sku, plan, properties, identity, zones, extendedLocation, ipConfigurations, tenantId, tags, name, resourceGroup",
                  "size": 0,
                  "title": "Network Interfaces",
                  "noDataMessage": "No Network Interfaces were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "PublicIPAddressid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "Subnet",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "IpConfigid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "linkIsContextBlade": false,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "NSGid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "VMid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true,
                          "bladeOpenContext": {
                            "bladeParameters": []
                          }
                        }
                      },
                      {
                        "columnMatch": "PrivateEndpointId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "rowLimit": 5000,
                    "filter": true,
                    "sortBy": [
                      {
                        "itemKey": "InternalDNSSuffix",
                        "sortOrder": 1
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "PrivateIPAddress",
                        "label": "Private IP Address"
                      },
                      {
                        "columnId": "PublicIPAddressid",
                        "label": "Public IP Resource"
                      },
                      {
                        "columnId": "IpConfigid",
                        "label": "IP Config"
                      },
                      {
                        "columnId": "InternalDNSSuffix",
                        "label": "Internal DNS Suffix"
                      },
                      {
                        "columnId": "NSGid",
                        "label": "NSG"
                      },
                      {
                        "columnId": "VMid",
                        "label": "Virtual Machine"
                      },
                      {
                        "columnId": "PrivateEndpointId",
                        "label": "Private Endpoint"
                      },
                      {
                        "columnId": "MacAddress",
                        "label": "MAC Address"
                      }
                    ]
                  },
                  "sortBy": [
                    {
                      "itemKey": "InternalDNSSuffix",
                      "sortOrder": 1
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "NIC"
                },
                "name": "NetworkInterfaces"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"microsoft.network/networkinterfaces\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend ipConfigurations = properties.ipConfigurations.[0]\r\n| extend PrivateIPAddress = tostring(ipConfigurations.properties.privateIPAddress)\r\n| extend PublicIPAddressId = tostring(ipConfigurations.properties.publicIPAddress.id)\r\n| extend PrivateIPAddressVersion = tostring(ipConfigurations.properties.privateIPAddressVersion)\r\n| extend PrivateIPAllocationMethod = tostring(ipConfigurations.properties.privateIPAllocationMethod)\r\n| extend Subnet = ipConfigurations.properties.subnet.id\r\n| extend IpConfigId = ipConfigurations.id\r\n| extend InternalDNSSuffix = tostring(properties.dnsSettings.internalDomainNameSuffix)\r\n| extend NSGId = properties.networkSecurityGroup.id\r\n| extend VMId = properties.virtualMachine.id\r\n| extend PrivateEndpointId = properties.privateEndpoint.id\r\n| extend MacAddress = tostring(properties.macAddress)\r\n| extend NicType = tostring(properties.nicType)\r\n| join ( Resources | where type=='microsoft.network/publicipaddresses' | extend PublicIP=tostring(properties.ipAddress) | project PublicIPAddressId=id, PublicIP ) on PublicIPAddressId\r\n| project-away kind, managedBy, sku, plan, properties, identity, zones, extendedLocation, ipConfigurations, PublicIPAddressId1, tenantId, tags, name, resourceGroup",
                  "size": 0,
                  "title": "Network Interfaces with Public IPs",
                  "noDataMessage": "No Network Interfaces were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "Subnet",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "IpConfigId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "NSGId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "VMId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "PrivateEndpointId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": false
                        }
                      },
                      {
                        "columnMatch": "IpConfigid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "NSGid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "VMid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true,
                          "templateRunContext": {
                            "componentIdSource": "parameter",
                            "templateUriSource": "static",
                            "templateParameters": [],
                            "titleSource": "static",
                            "descriptionSource": "static",
                            "description": "",
                            "runLabelSource": "static"
                          }
                        }
                      }
                    ],
                    "rowLimit": 5000,
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "PrivateIPAddress",
                        "label": "Private IP Address"
                      },
                      {
                        "columnId": "IpConfigId",
                        "label": "IP Config"
                      },
                      {
                        "columnId": "NSGId",
                        "label": "NSG"
                      },
                      {
                        "columnId": "VMId",
                        "label": "Virtual Machine"
                      }
                    ]
                  }
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "NIC"
                },
                "name": "NetworkInterfacesPIP"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"virtualNetworks\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend DDoSProtectionEnabled = properties.enableDdosProtection\r\n| extend DDoSProtectionPlan = properties.ddosProtectionPlan.id\r\n| extend VNETAddressRange = properties.addressSpace.addressPrefixes\r\n| extend subnets = properties.subnets\r\n| mvexpand bagexpansion=array subnets\r\n| extend SubnetName = tostring(subnets.name)\r\n| extend SubnetAddress = tostring(subnets.properties.addressPrefix)\r\n| extend ServiceEndpoints = subnets.properties.serviceEndpoints.[0]\r\n| extend SubnetIPConfigid = subnets.properties.ipConfigurations.[0].id\r\n| extend VNETPeerings = properties.virtualNetworkPeerings.[0]\r\n| extend VNETPeeringName = VNETPeerings.name\r\n| extend VNETPeerAddress = VNETPeerings.properties.remoteAddressSpace.addressPrefixes\r\n| extend VNETPeerRemoteVNETid = VNETPeerings.properties.remoteVirtualNetwork.id\r\n| extend VNETPeeringState = VNETPeerings.properties.peeringState\r\n| extend AllowVirtualNetworkAccess = VNETPeerings.properties.allowVirtualNetworkAccess\r\n| extend AllowForwardedTraffic = VNETPeerings.properties.allowForwardedTraffic\r\n| extend AllowGatewayTransit = VNETPeerings.properties.allowGatewayTransit\r\n| project-away kind, managedBy, sku, plan, identity, zones, extendedLocation, properties, subnets, VNETPeerings, tenantId, name, tags, resourceGroup",
                  "size": 0,
                  "title": "VNet Details with DDoS Protection, Subnets and Peerings",
                  "noDataMessage": "No VNETs were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "DDoSProtectionEnabled",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "false",
                              "representation": "3"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "true",
                              "representation": "success"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "Blank",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "SubnetIPConfigid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "sortBy": [
                      {
                        "itemKey": "$gen_thresholds_DDoSProtectionEnabled_5",
                        "sortOrder": 2
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "DDoSProtectionEnabled",
                        "label": "DDoS Protection Enabled"
                      },
                      {
                        "columnId": "DDoSProtectionPlan",
                        "label": "DDoS Protection Plan"
                      },
                      {
                        "columnId": "SubnetIPConfigid",
                        "label": "Subnet IP Config"
                      }
                    ]
                  },
                  "sortBy": [
                    {
                      "itemKey": "$gen_thresholds_DDoSProtectionEnabled_5",
                      "sortOrder": 2
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "VNetDetails"
                },
                "name": "VNetDetails"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type == \"microsoft.network/routetables\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend SubnetArray = properties.subnets\r\n| mvexpand bagexpansion=array SubnetArray\r\n| extend Subnetid = SubnetArray.id\r\n| extend DisableBGPRoutePropagation = tostring(properties.disableBgpRoutePropagation)\r\n| extend RouteArray = properties.routes\r\n| mvexpand bagexpansion=array RouteArray\r\n| extend RouteName = tostring(RouteArray.name)\r\n| extend Routeid = RouteArray.id\r\n| extend RouteAddressPrefix = tostring(RouteArray.properties.addressPrefix)\r\n| extend RouteHasBGPOverride = tostring(RouteArray.properties.hasBgpOverride)\r\n| extend RouteNextHopType = tostring(RouteArray.properties.nextHopType)\r\n| project-away kind, managedBy, sku, plan, properties, identity, zones, extendedLocation, SubnetArray, RouteArray, name, tenantId, tags, resourceGroup\r\n",
                  "size": 0,
                  "title": "Route Tables",
                  "noDataMessage": "No Route Tables were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "Subnetid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true,
                          "templateRunContext": {
                            "componentIdSource": "parameter",
                            "templateUriSource": "static",
                            "templateParameters": [],
                            "titleSource": "static",
                            "descriptionSource": "static",
                            "description": "",
                            "runLabelSource": "static"
                          }
                        }
                      },
                      {
                        "columnMatch": "Routeid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "Subnetid",
                        "label": "Subnet Id"
                      },
                      {
                        "columnId": "RouteName",
                        "label": "Route Name"
                      },
                      {
                        "columnId": "Routeid",
                        "label": "Route Id"
                      }
                    ]
                  }
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "RouteTables"
                },
                "name": "RouteTables"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"virtualNetworks\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend SubnetArray = properties.subnets\r\n| mvexpand bagexpansion=array SubnetArray\r\n| extend Subnetid = SubnetArray.id\r\n| extend SubnetAddress = SubnetArray.properties.addressPrefix\r\n| extend SubnetRoutetable = SubnetArray.properties.routeTable.id\r\n| extend SubnetRoutetableId = SubnetArray.properties.routeTable.id\r\n| project id, type, location, RG, subscriptionId, Subnetid, SubnetAddress, SubnetRoutetable, SubnetRoutetableId",
                  "size": 0,
                  "title": "Subnets without Route Tables ",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true,
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "200px"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "Subnetid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "SubnetRoutetable",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "is Empty",
                              "representation": "failed",
                              "text": ""
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": ""
                            }
                          ],
                          "customColumnWidthSetting": "20ch"
                        }
                      },
                      {
                        "columnMatch": "SubnetRoutetableId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "resourceGroup",
                        "formatter": 14,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "sortBy": [
                      {
                        "itemKey": "$gen_thresholds_SubnetRoutetable_7",
                        "sortOrder": 1
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Virtual Network"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "Subnetid",
                        "label": "Subnet Name"
                      },
                      {
                        "columnId": "SubnetRoutetable",
                        "label": "Associated"
                      },
                      {
                        "columnId": "SubnetRoutetableId",
                        "label": "Route Table"
                      }
                    ]
                  },
                  "sortBy": [
                    {
                      "itemKey": "$gen_thresholds_SubnetRoutetable_7",
                      "sortOrder": 1
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "RouteTables"
                },
                "name": "Subnets without Route Tables "
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type == \"microsoft.network/privateendpoints\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend NetworkInterfaces = properties.networkInterfaces.[0].id\r\n| extend Subnet = properties.subnet.id\r\n| extend ManualPrivateLinkServiceConnections = tostring(properties.manualPrivateLinkServiceConnections)\r\n| extend PrivateLinkServiceid = properties.privateLinkServiceConnections.[0].properties.privateLinkServiceId\r\n| extend PrivateLinkServiceGroupids = tostring(properties.privateLinkServiceConnections.[0].properties.groupIds)\r\n| extend PivateLinkServiceConnections = properties.privateLinkServiceConnections.[0].id\r\n| extend PrivateLinkCustomDNS = tostring(properties.customDnsConfigs)\r\n| project-away kind, managedBy, sku, plan, properties, identity, zones, extendedLocation, tags, tenantId, name, resourceGroup",
                  "size": 0,
                  "title": "Private Links",
                  "noDataMessage": "No Private Links were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "NetworkInterfaces",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "Subnet",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "PrivateLinkServiceid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true,
                          "templateRunContext": {
                            "componentIdSource": "parameter",
                            "templateUriSource": "static",
                            "templateParameters": [],
                            "titleSource": "static",
                            "descriptionSource": "static",
                            "description": "",
                            "runLabelSource": "static"
                          }
                        }
                      },
                      {
                        "columnMatch": "PivateLinkServiceConnections",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "NetworkInterfaces",
                        "label": "Network Interfaces"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "PrivateLinks"
                },
                "name": "PrivateLinks"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"virtualNetworks\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend SubnetArray = properties.subnets\r\n| mvexpand bagexpansion=array SubnetArray\r\n| extend Subnetid = SubnetArray.id\r\n| extend SubnetAddress = SubnetArray.properties.addressPrefix\r\n| extend SubnetNSG = SubnetArray.properties.networkSecurityGroup.id   \r\n| extend SubnetNSGId = SubnetArray.properties.networkSecurityGroup.id\r\n| project id, type, location, RG, subscriptionId, Subnetid, SubnetAddress, SubnetNSG, SubnetNSGId",
                  "size": 0,
                  "title": "Subnets without Network Security Groups",
                  "noDataMessage": "No Subnets found.",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true,
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "200px"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "Subnetid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "SubnetNSG",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "is Empty",
                              "representation": "failed",
                              "text": "False"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "True"
                            }
                          ],
                          "customColumnWidthSetting": "20ch"
                        }
                      },
                      {
                        "columnMatch": "SubnetNSGId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Virtual Network"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "Subnetid",
                        "label": "Subnet Name"
                      },
                      {
                        "columnId": "SubnetNSG",
                        "label": "Associated"
                      },
                      {
                        "columnId": "SubnetNSGId",
                        "label": "Network Security Group"
                      }
                    ]
                  }
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "NetworkSecurityGroups"
                },
                "name": "Subnets without Network Security Groups"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where type contains \"networksecuritygroups\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend NSGResourceID = id\r\n| join kind=leftouter  (resources | where type contains \"flowLogs\" | extend targetResourceId=tostring(properties.targetResourceId) | project NSGResourceID=targetResourceId,id) on NSGResourceID\r\n| project id=NSGResourceID, type, location, RG, subscriptionId, FlowLogsEnabled=NSGResourceID1,FlowLogsId=id1",
                  "size": 0,
                  "title": "Network Security Groups with enabled Flow Logs",
                  "noDataMessage": "No NetworkSecurityGroups found.",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true,
                          "customColumnWidthSetting": "30ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "180px"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "FlowLogsEnabled",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "startsWith",
                              "thresholdValue": "/",
                              "representation": "success",
                              "text": "True"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "failed",
                              "text": "False"
                            }
                          ],
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "FlowLogsId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "sortBy": [
                      {
                        "itemKey": "$gen_thresholds_FlowLogsEnabled_5",
                        "sortOrder": 1
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Network Security Group"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "FlowLogsEnabled",
                        "label": "Flow Logs Enabled"
                      },
                      {
                        "columnId": "FlowLogsId",
                        "label": "Flow Logs"
                      }
                    ]
                  },
                  "sortBy": [
                    {
                      "itemKey": "$gen_thresholds_FlowLogsEnabled_5",
                      "sortOrder": 1
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedSubMenu",
                  "comparison": "isEqualTo",
                  "value": "NetworkSecurityGroups"
                },
                "name": "Network Securtiy Groups with enabled Flow Logs"
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "SelectedView",
            "comparison": "isEqualTo",
            "value": "InternalNetworkingView"
          },
          "name": "InternalNetworkingGroup"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"microsoft.network/bastionhosts\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend DNSName = tostring(properties.dnsName)\r\n| extend ipConfigurations = properties.ipConfigurations.[0]\r\n| extend privateIPAllocationMethod = tostring(ipConfigurations.properties.privateIPAllocationMethod)\r\n| extend PIPid = tostring(ipConfigurations.properties.publicIPAddress.id)\r\n| join ( Resources | where type=='microsoft.network/publicipaddresses' | extend frontendPublicIPAddress=tostring(properties.ipAddress) | project PIPid=id,frontendPublicIPAddress ) on PIPid\r\n| project-away kind, managedBy, sku, plan, properties, identity, zones, extendedLocation, ipConfigurations, PIPid, PIPid1, tags, tenantId, name, resourceGroup",
                  "size": 0,
                  "title": "Bastion Hosts",
                  "noDataMessage": "No Bastion Hosts were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "DNSName",
                        "label": "DNS Name"
                      },
                      {
                        "columnId": "privateIPAllocationMethod",
                        "label": "Private IP Allocation Method"
                      },
                      {
                        "columnId": "frontendPublicIPAddress",
                        "label": "Frontend Public IP Address"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "GatewayVPNView"
                },
                "name": "BastionHosts"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"microsoft.network/vpngateways\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend ipConfigurations = properties.ipConfigurations\r\n| mv-expand bagexpansion=array ipConfigurations\r\n| extend instanceid = tostring(ipConfigurations.id)\r\n| extend publicIP = tostring(ipConfigurations.publicIpAddress)\r\n| extend privateIP = tostring(ipConfigurations.privateIpAddress)\r\n| extend virtualHubid = tostring(properties.virtualHub.id)\r\n| extend natRules = tostring(properties.natRules)\r\n| project-away kind, managedBy, sku, plan, identity, zones, extendedLocation, ipConfigurations, properties, tenantId, tags, name, resourceGroup",
                  "size": 0,
                  "title": "VPN Gateways",
                  "noDataMessage": "No VPN Gateways were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "instanceid",
                        "label": "Instance"
                      },
                      {
                        "columnId": "publicIP",
                        "label": "Public IP"
                      },
                      {
                        "columnId": "privateIP",
                        "label": "Private IP"
                      },
                      {
                        "columnId": "virtualHubid",
                        "label": "Virtual Hub"
                      },
                      {
                        "columnId": "natRules",
                        "label": "NAT Rules"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "GatewayVPNView"
                },
                "name": "VPNGateways"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"microsoft.network/virtualnetworkgateways\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend ipConfigurations = properties.ipConfigurations\r\n| mv-expand bagexpansion=array ipConfigurations\r\n| extend PIPid = tostring(ipConfigurations.properties.publicIPAddress.id)\r\n| join ( Resources | where type=='microsoft.network/publicipaddresses' | extend frontendPublicIPAddress=tostring(properties.ipAddress) | project PIPid=id,frontendPublicIPAddress ) on PIPid\r\n| extend Subnetid = ipConfigurations.properties.subnet.id\r\n| extend privateIPAllocation = tostring(ipConfigurations.properties.privateIPAllocationMethod)\r\n| extend gatewayType = tostring(properties.gatewayType)\r\n| extend vpnType = tostring(properties.vpnType)\r\n| extend skuName = tostring(properties.sku.name)\r\n| extend skuTier = tostring(properties.sku.tier)\r\n| extend skuCapacity = tostring(properties.sku.capacity)\r\n| project-away PIPid, PIPid1, extendedLocation, zones, identity, managedBy, sku, plan, kind, ipConfigurations, properties, tenantId, tags, name, resourceGroup",
                  "size": 0,
                  "title": "Virtual Network Gateways",
                  "noDataMessage": "No Virtual Network Gateways were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "Subnetid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "frontendPublicIPAddress",
                        "label": "Frontend Public IP Address"
                      },
                      {
                        "columnId": "Subnetid",
                        "label": "Subnet"
                      },
                      {
                        "columnId": "privateIPAllocation",
                        "label": "Private IP Allocation"
                      },
                      {
                        "columnId": "gatewayType",
                        "label": "Gateway Type"
                      },
                      {
                        "columnId": "vpnType",
                        "label": "VPN Type"
                      },
                      {
                        "columnId": "skuName",
                        "label": "SKU Name"
                      },
                      {
                        "columnId": "skuTier",
                        "label": "SKU Tier"
                      },
                      {
                        "columnId": "skuCapacity",
                        "label": "SKU Capacity"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "GatewayVPNView"
                },
                "name": "VirtualNetworkGateways"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type contains \"microsoft.network/expressroutecircuits\"\r\n| extend ServiceProviderProvisioningState = tostring(properties.serviceProviderProvisioningState)\r\n| extend ServiceProviderName = tostring(properties.serviceProviderProperties.serviceProviderName)\r\n| extend BandwidthInMbps = tostring(properties.serviceProviderProperties.bandwidthInMbps)\r\n| extend PeeringLocation = tostring(properties.serviceProviderProperties.peeringLocation)\r\n| extend CircuitProvisioningState = tostring(properties.circuitProvisioningState)\r\n| extend ServiceKey = tostring(properties.serviceKey)\r\n| extend peerings = properties.peerings.[0].properties\r\n| extend PeeringState = tostring(peerings.state)\r\n| extend PrimaryPeerAddressPrefix = tostring(peerings.primaryPeerAddressPrefix)\r\n| extend SecondaryPeerAddressPrefix = tostring(peerings.secondaryPeerAddressPrefix)\r\n| extend PeeringType = tostring(peerings.peeringType)\r\n| extend AzureASN = tostring(peerings.azureASN)\r\n| extend PeerASN = tostring(peerings.peerASN)\r\n| extend VlanId = tostring(peerings.vlanId)\r\n| project-away kind, managedBy, plan, properties, identity, zones, extendedLocation, peerings, tenantId, sku, tags, name",
                  "size": 0,
                  "title": "Express Route Circuits",
                  "noDataMessage": "No Express Route Circuits were found",
                  "showExportToExcel": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "ServiceProviderProvisioningState",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Provisioned",
                              "representation": "Available",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "NotProvisioned",
                              "representation": "uninitialized",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "Blank",
                              "text": "{0}{1}"
                            }
                          ],
                          "compositeBarSettings": {
                            "labelText": "",
                            "columnSettings": []
                          }
                        }
                      }
                    ],
                    "filter": true,
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "resourceGroup",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "GatewayVPNView"
                },
                "name": "ExpressRouteCircuits"
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "SelectedView",
            "comparison": "isEqualTo",
            "value": "GatewayVPNView"
          },
          "name": "GatewayVPNGroup"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 11,
                "content": {
                  "version": "LinkItem/1.0",
                  "style": "tabs",
                  "links": [
                    {
                      "id": "9bd71767-c001-4a9e-bf43-259f90ede76a",
                      "cellValue": "SubSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "Overview",
                      "subTarget": "vWANOverview",
                      "preText": "Databases",
                      "style": "link"
                    },
                    {
                      "id": "1423153e-96ce-49f9-a367-1d385ac48cf0",
                      "cellValue": "SubSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "VPN Gateways",
                      "subTarget": "vWANVPN",
                      "preText": "Storage Accounts",
                      "style": "link"
                    },
                    {
                      "id": "6aabdebe-5691-45b9-beb5-36f0d0957f1f",
                      "cellValue": "SubSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "VPN Sites",
                      "subTarget": "vWANVPNSites",
                      "style": "link"
                    },
                    {
                      "id": "6b439004-d689-4429-bfc4-fa919eb6ad52",
                      "cellValue": "SubSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "P2S VPN Gateways",
                      "subTarget": "vWANP2S",
                      "style": "link"
                    },
                    {
                      "id": "a1b022b1-d70b-4fc8-a972-5a7b116e82c4",
                      "cellValue": "SubSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "Expressroute Gateways",
                      "subTarget": "vWANExpressRoute",
                      "style": "link"
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "VirtualWANView"
                },
                "name": "vWANMenu"
              },
              {
                "type": 1,
                "content": {
                  "json": "Please select a item to view / see Virtual WAN Hubs",
                  "style": "info"
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "VirtualWANView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "vWANOverview"
                  }
                ],
                "name": "Virtual WAN - InfoText"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where type == \"microsoft.network/virtualwans\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend allowBranchToBranchTraffic = properties.allowBranchToBranchTraffic\r\n| extend allowVnetToVnetTraffic = properties.allowVnetToVnetTraffic\r\n| project-away kind, managedBy, sku, plan, identity,tenantId, tags, zones, extendedLocation, name, properties, resourceGroup",
                  "size": 4,
                  "title": "Virtual WAN - Overview",
                  "exportFieldName": "id",
                  "exportParameterName": "ResourceID",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true,
                          "customColumnWidthSetting": "20ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "allowBranchToBranchTraffic",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "true",
                              "representation": "success",
                              "text": "True"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "failed",
                              "text": "False"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "allowVnetToVnetTraffic",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "true",
                              "representation": "success",
                              "text": "True"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "failed",
                              "text": "False"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "resourceGroup",
                        "formatter": 14,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": false
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "allowBranchToBranchTraffic",
                        "label": "Branch-To-Branch"
                      },
                      {
                        "columnId": "allowVnetToVnetTraffic",
                        "label": "VNet-To-VNet"
                      }
                    ]
                  }
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "VirtualWANView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "vWANOverview"
                  }
                ],
                "name": "Virtual WAN - Overview"
              },
              {
                "type": 1,
                "content": {
                  "json": "Please select a item to view / see HubVirtualNetworkConnections.",
                  "style": "info"
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "VirtualWANView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "vWANOverview"
                  }
                ],
                "name": "Virtual WAN - InfoText - Connections"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where type == \"microsoft.network/virtualhubs\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend  addressPrefix = tostring(properties.addressPrefix)\r\n| extend  sku = tostring(properties.sku)\r\n| extend  allowBranchToBranchTraffic = tostring(properties.allowBranchToBranchTraffic)\r\n| extend virtualWan = properties.virtualWan\r\n| extend virtualWanId = virtualWan.id\r\n| extend azureFirewall = properties.azureFirewall.id\r\n| project virtualWanId, id, type, location, subscriptionId, RG, azureFirewall, addressPrefix, sku, allowBranchToBranchTraffic",
                  "size": 1,
                  "title": "Virtuwal WAN - Hubs",
                  "exportFieldName": "id",
                  "exportParameterName": "HubResourceID",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "virtualWanId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true,
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "id",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true,
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true,
                          "customColumnWidthSetting": "30ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "azureFirewall",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "allowBranchToBranchTraffic",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "true",
                              "representation": "success",
                              "text": "True"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "false",
                              "representation": "failed",
                              "text": "False"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        },
                        "tooltipFormat": {}
                      },
                      {
                        "columnMatch": "resourceGroup",
                        "formatter": 14,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": false
                        }
                      },
                      {
                        "columnMatch": "virtualHubID",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "virtualWanId",
                        "label": "Virtual WAN"
                      },
                      {
                        "columnId": "id",
                        "label": "Hub Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "azureFirewall",
                        "label": "Secured Hub"
                      },
                      {
                        "columnId": "addressPrefix",
                        "label": "AddressPrefix"
                      },
                      {
                        "columnId": "sku",
                        "label": "SKU"
                      },
                      {
                        "columnId": "allowBranchToBranchTraffic",
                        "label": "Branch-To-Branch"
                      }
                    ]
                  }
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "VirtualWANView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "vWANOverview"
                  }
                ],
                "name": "Virtuwal WAN - Hubs"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{HubResourceID}/hubVirtualNetworkConnections?api-version=2021-03-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.name\",\"columnid\":\"VNETName\"},{\"path\":\"$.type\",\"columnid\":\"Type\"},{\"path\":\"$.properties.remoteVirtualNetwork.id\",\"columnid\":\"remoteVirtualNetwork\"},{\"path\":\"$.id\",\"columnid\":\"ConnectionID\"},{\"path\":\"$.properties.routingConfiguration.associatedRouteTable.id\",\"columnid\":\"AssociatedRouteTable\"},{\"path\":\"$.properties.allowHubToRemoteVnetTransit\",\"columnid\":\"allowHubToRemoteVnetTransit\"},{\"path\":\"$.properties.allowRemoteVnetToUseHubVnetGateways\",\"columnid\":\"allowRemoteVnetToUseHubVnetGateways\"},{\"path\":\"$.properties.enableInternetSecurity\",\"columnid\":\"enableInternetSecurity\"}]}}]}",
                  "size": 0,
                  "title": "Virtuwal WAN - Hubs - Connections / Peering",
                  "noDataMessage": "No HubVirtualNetworkConnections configured.",
                  "showExportToExcel": true,
                  "queryType": 12,
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "allowHubToRemoteVnetTransit",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "true",
                              "representation": "success",
                              "text": "True"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "false",
                              "representation": "failed",
                              "text": "False"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "allowRemoteVnetToUseHubVnetGateways",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "true",
                              "representation": "success",
                              "text": "True"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "false",
                              "representation": "failed",
                              "text": "False"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "enableInternetSecurity",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "true",
                              "representation": "success",
                              "text": "True"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "false",
                              "representation": "failed",
                              "text": "False"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true,
                          "customColumnWidthSetting": "30ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "VNETName",
                        "label": "VNET Name"
                      },
                      {
                        "columnId": "remoteVirtualNetwork",
                        "label": "Virtual Network"
                      },
                      {
                        "columnId": "ConnectionID",
                        "label": "Connection ID"
                      },
                      {
                        "columnId": "allowHubToRemoteVnetTransit",
                        "label": "HubToRemoteVnetTransit"
                      },
                      {
                        "columnId": "allowRemoteVnetToUseHubVnetGateways",
                        "label": "RemoteVnetToUseHubVnetGateways"
                      },
                      {
                        "columnId": "enableInternetSecurity",
                        "label": "InternetSecurity"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "HubResourceID",
                    "comparison": "isNotEqualTo"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "VirtualWANView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "vWANOverview"
                  }
                ],
                "name": "Virtuwal WAN - Hubs - Connections / Peering"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where type =~ \"microsoft.network/vpngateways\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend vpnGatewayScaleUnit = tostring(properties.vpnGatewayScaleUnit)\r\n| extend virtualHub = properties.virtualHub.id\r\n| extend ipConfigurations = properties.ipConfigurations\r\n| extend bgpSettings = properties.bgpSettings\r\n| extend packetCaptureDiagnosticState = tostring(properties.packetCaptureDiagnosticState)\r\n| extend natRules = properties.natRules\r\n| extend enableBgpRouteTranslationForNat = tostring(properties.enableBgpRouteTranslationForNat)\r\n| extend isRoutingPreferenceInternet = tostring(properties.isRoutingPreferenceInternet)\r\n| extend connections = properties.connections\r\n| mv-expand bagexpansion=array ipConfigurations\r\n| project virtualHub, id, type, location, RG, subscriptionId, vpnGatewayScaleUnit, packetCaptureDiagnosticState, enableBgpRouteTranslationForNat, isRoutingPreferenceInternet, bgpSettings,natRules, connections, ipConfigurations",
                  "size": 4,
                  "title": "Virtuwal WAN - VPN Gateways",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "virtualHub",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true,
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "id",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "virtualWanId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "virtualHubID",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "virtualHub",
                        "label": "Hub Name"
                      },
                      {
                        "columnId": "id",
                        "label": "VPN Gateway Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "vpnGatewayScaleUnit",
                        "label": "GatewayScaleUnit"
                      },
                      {
                        "columnId": "packetCaptureDiagnosticState",
                        "label": "PacketCaptureDiagnostic"
                      },
                      {
                        "columnId": "enableBgpRouteTranslationForNat",
                        "label": "BgpRouteTranslationForNat"
                      },
                      {
                        "columnId": "isRoutingPreferenceInternet",
                        "label": "RoutingPreferenceInternet"
                      },
                      {
                        "columnId": "bgpSettings",
                        "label": "BGP Settings"
                      },
                      {
                        "columnId": "natRules",
                        "label": "NAT Rules"
                      },
                      {
                        "columnId": "connections",
                        "label": "Connections"
                      },
                      {
                        "columnId": "ipConfigurations",
                        "label": "IP Configurations"
                      }
                    ]
                  }
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "VirtualWANView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "vWANVPN"
                  }
                ],
                "name": "Virtuwal WAN - VPN"
              },
              {
                "type": 1,
                "content": {
                  "json": "Please select a item to view / see VPN site links.",
                  "style": "info"
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "VirtualWANView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "vWANVPNSites"
                  }
                ],
                "name": "Virtual WAN - InfoText - VPN site link"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where type =~ \"Microsoft.Network/vpnSites\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend addressPrefixes = properties.addressSpace.addressPrefixes\r\n| extend virtualWan = properties.virtualWan.id\r\n| extend linkSpeedInMbps = tostring(properties.deviceProperties.linkSpeedInMbps)\r\n| extend deviceVendor = tostring(properties.deviceProperties.deviceVendor)\r\n| extend isSecuritySite = tostring(properties.isSecuritySite)\r\n| extend vpnSiteLinks = properties.vpnSiteLinks\r\n| project virtualWan, id, type, location, RG, subscriptionId, addressPrefixes, linkSpeedInMbps, deviceVendor, isSecuritySite, vpnSiteLinks",
                  "size": 4,
                  "title": "Virtuwal WAN - VPN - Sites",
                  "noDataMessage": "No VpnSites configured.",
                  "exportFieldName": "id",
                  "exportParameterName": "VPNSiteLinkResourceID",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "virtualWan",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true,
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "id",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true,
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "virtualHub",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "virtualWanId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "virtualHubID",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "virtualWan",
                        "label": "Virtual WAN"
                      },
                      {
                        "columnId": "id",
                        "label": "VPN Site Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "addressPrefixes",
                        "label": "AddressPrefixes"
                      },
                      {
                        "columnId": "linkSpeedInMbps",
                        "label": "LinkSpeedInMbps"
                      },
                      {
                        "columnId": "deviceVendor",
                        "label": "DeviceVendor"
                      },
                      {
                        "columnId": "isSecuritySite",
                        "label": "SecuritySite"
                      },
                      {
                        "columnId": "vpnSiteLinks",
                        "label": "VPNSiteLinks"
                      }
                    ]
                  }
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "VirtualWANView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "vWANVPNSites"
                  }
                ],
                "name": "Virtuwal WAN - VPN - Sites"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{VPNSiteLinkResourceID}/vpnSiteLinks?api-version=2021-03-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.id\",\"columnid\":\"Id\"},{\"path\":\"$.type\",\"columnid\":\"type\"},{\"path\":\"$.properties.ipAddress\",\"columnid\":\"ipAddress\"},{\"path\":\"$.properties.linkProperties.linkProviderName\",\"columnid\":\"linkProviderName\"},{\"path\":\"$.properties.linkProperties.linkSpeedInMbps\",\"columnid\":\"linkSpeedInMbps\"}]}}]}",
                  "size": 4,
                  "title": "Virtuwal WAN - VPN - Sites Links",
                  "noDataMessage": "No VpnSites Links configured.",
                  "queryType": 12,
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "id",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true,
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "virtualWan",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true,
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "virtualHub",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "virtualWanId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "virtualHubID",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "Id",
                        "label": "VPN Site Linke Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "ipAddress",
                        "label": "IP Address"
                      },
                      {
                        "columnId": "linkProviderName",
                        "label": "Provider Name"
                      },
                      {
                        "columnId": "linkSpeedInMbps",
                        "label": "Speed In Mbps"
                      }
                    ]
                  }
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "VirtualWANView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "vWANVPNSites"
                  },
                  {
                    "parameterName": "VPNSiteLinkResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "Virtuwal WAN - VPN - SiteLinks"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where type == \"microsoft.network/p2svpngateways\"\r\n| extend virtualHub = properties.virtualHub.id\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend vpnServerConfiguration = properties.vpnServerConfiguration\r\n| extend p2SConnectionConfigurations = properties.p2SConnectionConfigurations\r\n| extend vpnGatewayScaleUnit = tostring(properties.vpnGatewayScaleUnit)\r\n| extend customDnsServers = properties.customDnsServers\r\n| extend isRoutingPreferenceInternet = tostring(properties.isRoutingPreferenceInternet)\r\n| project virtualHub, id, type, location, RG, subscriptionId, vpnGatewayScaleUnit, isRoutingPreferenceInternet, customDnsServers, vpnServerConfiguration, p2SConnectionConfigurations",
                  "size": 4,
                  "title": "Virtuwal WAN - P2S VPN Gateways",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "virtualHub",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "id",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "virtualWanId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "virtualHubID",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "virtualHub",
                        "label": "Hub Name"
                      },
                      {
                        "columnId": "id",
                        "label": "P2S VPN Gateway Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "vpnGatewayScaleUnit",
                        "label": "GatewayScaleUnit"
                      }
                    ]
                  }
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "VirtualWANView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "vWANP2S"
                  }
                ],
                "name": "Virtuwal WAN - P2S VPN"
              },
              {
                "type": 1,
                "content": {
                  "json": "Please select a item to view / see ExpressRouteConnections.",
                  "style": "info"
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "VirtualWANView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "vWANExpressRoute"
                  }
                ],
                "name": "Virtual WAN - InfoText - ExpressRoute"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where type =~ \"Microsoft.Network/expressRouteGateways\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend virtualHub = properties.virtualHub.id\r\n| extend expressRouteConnections = properties.expressRouteConnections\r\n| project virtualHub, id, type, location, RG, subscriptionId",
                  "size": 4,
                  "title": "Virtuwal WAN - ExpressRoute Gateways",
                  "exportFieldName": "id",
                  "exportParameterName": "ExpressRouteResourceID",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "virtualHub",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "id",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "virtualWanId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "virtualHubID",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "sortBy": [
                      {
                        "itemKey": "$gen_link_virtualHub_0",
                        "sortOrder": 1
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "virtualHub",
                        "label": "Hub Name"
                      },
                      {
                        "columnId": "id",
                        "label": "Expressroute Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Groups"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      }
                    ]
                  },
                  "sortBy": [
                    {
                      "itemKey": "$gen_link_virtualHub_0",
                      "sortOrder": 1
                    }
                  ]
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "VirtualWANView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "vWANExpressRoute"
                  }
                ],
                "name": "Virtuwal WAN - ExpressRoute"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{ExpressRouteResourceID}/expressRouteConnections?api-version=2021-03-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.id\",\"columnid\":\"id\"},{\"path\":\"$.properties.expressRouteCircuitPeering.id\",\"columnid\":\"expressRouteCircuitPeering\"},{\"path\":\"$.properties.routingWeight\",\"columnid\":\"routingWeight\"},{\"path\":\"$.properties.enableInternetSecurity\",\"columnid\":\"enableInternetSecurity\"},{\"path\":\"$.properties.expressRouteGatewayBypass\",\"columnid\":\"expressRouteGatewayBypass\"},{\"path\":\"$.properties.routingConfiguration\",\"columnid\":\"routingConfiguration\"}]}}]}",
                  "size": 4,
                  "title": "Virtuwal WAN - ExpressRoute Connection List",
                  "noDataMessage": "No ExpressRouteConnection configured.",
                  "queryType": 12,
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "virtualHub",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "id",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "virtualWanId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "virtualHubID",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "sortBy": [
                      {
                        "itemKey": "$gen_link_virtualHub_0",
                        "sortOrder": 1
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "virtualHub",
                        "label": "Hub Name"
                      },
                      {
                        "columnId": "id",
                        "label": "Expressroute Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "resourceGroup",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      }
                    ]
                  },
                  "sortBy": [
                    {
                      "itemKey": "$gen_link_virtualHub_0",
                      "sortOrder": 1
                    }
                  ]
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "VirtualWANView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "vWANExpressRoute"
                  },
                  {
                    "parameterName": "ExpressRouteResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "Virtuwal WAN - ExpressRouteConnectionList"
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "SelectedView",
            "comparison": "isEqualTo",
            "value": "VirtualWANView"
          },
          "name": "VirtualWANGroup"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "Resources\r\n| where type == \"microsoft.network/trafficmanagerprofiles\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend FQDN = tostring(properties.dnsConfig.fqdn)\r\n| extend RelativeName = tostring(properties.dnsConfig.relativeName)\r\n| extend DNSTTL = tostring(properties.dnsConfig.ttl)\r\n| extend endpoints = properties.endpoints\r\n| mvexpand bagexpansion=array endpoints\r\n| extend TargetResourceid = endpoints.properties.targetResourceId\r\n| extend Target = tostring(endpoints.properties.target)\r\n| extend Priority = tostring(endpoints.properties.priority)\r\n| extend Weight = tostring(endpoints.properties.weight)\r\n| extend EndpointLocation = tostring(endpoints.properties.endpointLocation)\r\n| extend EndpointName = tostring(endpoints.name)\r\n| extend EndpointStatus = tostring(endpoints.properties.endpointMonitorStatus)\r\n| extend Endpointid = endpoints.id\r\n| extend TrafficRoutingMethod = tostring(properties.trafficRoutingMethod)\r\n| extend ProfileStatus = tostring(properties.profileStatus)\r\n| extend Protocol = tostring(properties.monitorConfig.protocol)\r\n| extend Port = tostring(properties.monitorConfig.port)\r\n| extend Path = tostring(properties.monitorConfig.path)\r\n| extend TimeoutInSeconds = tostring(properties.monitorConfig.timeoutInSeconds)\r\n| extend IntervalInSeconds = tostring(properties.monitorConfig.intervalInSeconds)\r\n| extend MonitorStatus = tostring(properties.monitorConfig.profileMonitorStatus)\r\n| extend NumberOfFailuresTolerated = tostring(properties.monitorConfig.toleratedNumberOfFailures)\r\n| project-away kind, managedBy, sku, plan, identity, zones, extendedLocation, endpoints, properties, name, tenantId, location, tags, resourceGroup",
            "size": 0,
            "title": "Traffic Manager Profiles",
            "noDataMessage": "No Traffic Manager Profiles were found",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "type",
                  "formatter": 16,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                {
                  "columnMatch": "subscriptionId",
                  "formatter": 15,
                  "formatOptions": {
                    "linkTarget": null,
                    "showIcon": true
                  }
                },
                {
                  "columnMatch": "TargetResourceid",
                  "formatter": 13,
                  "formatOptions": {
                    "linkTarget": null,
                    "showIcon": true
                  }
                },
                {
                  "columnMatch": "EndpointStatus",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "==",
                        "thresholdValue": "Stopped",
                        "representation": "stopped",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Degraded",
                        "representation": "Degraded",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Online",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Disabled",
                        "representation": "disabled",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "Blank",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                {
                  "columnMatch": "Endpointid",
                  "formatter": 13,
                  "formatOptions": {
                    "linkTarget": null,
                    "showIcon": true
                  }
                },
                {
                  "columnMatch": "MonitorStatus",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "==",
                        "thresholdValue": "Online",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Degraded",
                        "representation": "Degraded",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "Blank",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                }
              ],
              "filter": true,
              "labelSettings": [
                {
                  "columnId": "id",
                  "label": "Name"
                },
                {
                  "columnId": "type",
                  "label": "Type"
                },
                {
                  "columnId": "subscriptionId",
                  "label": "Subscription"
                },
                {
                  "columnId": "RG",
                  "label": "Resource Group"
                },
                {
                  "columnId": "RelativeName",
                  "label": "Relative Name"
                },
                {
                  "columnId": "DNSTTL",
                  "label": "DNS TTL"
                },
                {
                  "columnId": "TargetResourceid",
                  "label": "Target Resource"
                },
                {
                  "columnId": "EndpointLocation",
                  "label": "Endpoint Location"
                },
                {
                  "columnId": "EndpointName",
                  "label": "Endpoint Name"
                },
                {
                  "columnId": "EndpointStatus",
                  "label": "Endpoint Status"
                },
                {
                  "columnId": "Endpointid",
                  "label": "Endpoint"
                },
                {
                  "columnId": "TrafficRoutingMethod",
                  "label": "Traffic Routing Method"
                },
                {
                  "columnId": "ProfileStatus",
                  "label": "Profile Status"
                },
                {
                  "columnId": "TimeoutInSeconds",
                  "label": "Timeout In Seconds"
                },
                {
                  "columnId": "IntervalInSeconds",
                  "label": "Interval In Seconds"
                },
                {
                  "columnId": "MonitorStatus",
                  "label": "Monitor Status"
                },
                {
                  "columnId": "NumberOfFailuresTolerated",
                  "label": "Number of Failures Tolerated"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "SelectedView",
            "comparison": "isEqualTo",
            "value": "TrafficManagerView"
          },
          "name": "TrafficManager"
        },
        {
          "type": 1,
          "content": {
            "json": "This view presents all current unhealthy recommendations on Security Center which are network related. To view unhealthy resources, click on the recommendation name below.",
            "style": "info"
          },
          "conditionalVisibility": {
            "parameterName": "SelectedView",
            "comparison": "isEqualTo",
            "value": "RecommendationsView"
          },
          "name": "RecommendationsBanner"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n| where type =~ \"microsoft.security/assessments\"\r\n| where properties.status.code == \"Unhealthy\"\r\n| extend ResourceId = tolower(tostring(properties.resourceDetails.Id))\r\n| project DisplayName = tostring(properties.displayName),\r\nResourceId = tolower(properties.resourceDetails.Id),\r\nname,\r\nSeverity = tostring(properties.metadata.severity),\r\nSeverityRank = case(\r\n    properties.metadata.severity == 'High', 3,\r\n    properties.metadata.severity == 'Medium', 2,\r\n    properties.metadata.severity == 'Low', 1,\r\n    0\r\n    ),\r\nResourceType = tostring(split(id, \"/\")[6])\r\n| join kind=inner (securityresources\r\n| where type == 'microsoft.security/securescores/securescorecontrols'\r\n| extend AssessmentDefinitions = parse_json(properties.definition.properties.assessmentDefinitions)\r\n| mvexpand AssessmentDefinitions\r\n| extend name = tostring(split(AssessmentDefinitions.id, \"/\")[4])) on name\r\n| where ResourceType in ('microsoft.web', 'Microsoft.Network')\r\n| summarize ResourceCount = count() by DisplayName, name, ControlName = tostring(properties.displayName), SeverityRank, Severity\r\n| sort by SeverityRank, ResourceCount desc",
            "size": 0,
            "noDataMessage": "No security recommendations were found",
            "showExportToExcel": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "gridSettings": {
              "formatters": [
                {
                  "columnMatch": "DisplayName",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "bladeOpenContext": {
                      "bladeName": "RecommendationsBlade",
                      "extensionName": "Microsoft_Azure_Security",
                      "bladeParameters": [
                        {
                          "name": "assessmentKey",
                          "source": "column",
                          "value": "name"
                        }
                      ]
                    },
                    "customColumnWidthSetting": "80ch"
                  }
                },
                {
                  "columnMatch": "name",
                  "formatter": 5
                },
                {
                  "columnMatch": "SeverityRank",
                  "formatter": 5
                },
                {
                  "columnMatch": "Severity",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "==",
                        "thresholdValue": "Medium",
                        "representation": "2"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "High",
                        "representation": "4"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Low",
                        "representation": "info"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ],
                    "compositeBarSettings": {
                      "labelText": "",
                      "columnSettings": []
                    }
                  }
                },
                {
                  "columnMatch": "ResourceCount",
                  "formatter": 3,
                  "formatOptions": {
                    "palette": "red"
                  }
                }
              ],
              "rowLimit": 1000,
              "filter": true,
              "labelSettings": [
                {
                  "columnId": "DisplayName",
                  "label": "Recommendation name"
                },
                {
                  "columnId": "ControlName",
                  "label": "Control name"
                },
                {
                  "columnId": "ResourceCount",
                  "label": "Resource count"
                }
              ]
            }
          },
          "conditionalVisibility": {
            "parameterName": "SelectedView",
            "comparison": "isEqualTo",
            "value": "RecommendationsView"
          },
          "name": "Recommendations"
        },
        {
          "type": 1,
          "content": {
            "json": "#### Summary"
          },
          "conditionalVisibility": {
            "parameterName": "SelectedView",
            "comparison": "isEqualTo",
            "value": "Overview"
          },
          "name": "Summary"
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "Resources\r\n| where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress)\r\n| extend publicipaddress = tostring(properties.ipAddress)\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend pipallocationmethod = tostring(properties.publicIPAllocationMethod)\r\n| extend sku = tostring(sku.name)\r\n| extend ipConfiguration = parse_json(properties.ipConfiguration.id)\r\n| extend BrkipConfig = split(ipConfiguration, '/')\r\n| extend assetprovider = tostring(BrkipConfig[6])\r\n| extend typeassetassociatedwith = iif(isempty(tostring(BrkipConfig[7])),\"not associated\",tostring(BrkipConfig[7]))\r\n| extend nameassetassociatedwith = substring(properties.ipConfiguration.id, 0, indexof(properties.ipConfiguration.id, '/ipConfigurations'))\r\n| extend dnsname = tostring(properties.dnsSettings.fqdn)\r\n| summarize count() by typeassetassociatedwith",
            "size": 1,
            "title": "Public IP by Resource Type",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "visualization": "piechart",
            "chartSettings": {
              "showMetrics": false,
              "showLegend": true
            }
          },
          "customWidth": "40",
          "conditionalVisibility": {
            "parameterName": "SelectedView",
            "comparison": "isEqualTo",
            "value": "Overview"
          },
          "name": "PublicIPbyType",
          "styleSettings": {
            "maxWidth": "40",
            "showBorder": true
          }
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "securityresources\r\n| where type =~ \"microsoft.security/assessments\"\r\n| where properties.status.code == \"Unhealthy\"\r\n| extend ResourceId = tolower(tostring(properties.resourceDetails.Id)),\r\nResourceType = tostring(split(id, \"/\")[6])\r\n| join kind=inner (securityresources\r\n| where type == 'microsoft.security/securescores/securescorecontrols'\r\n| extend AssessmentDefinitions = parse_json(properties.definition.properties.assessmentDefinitions)\r\n| mvexpand AssessmentDefinitions\r\n| extend name = tostring(split(AssessmentDefinitions.id, \"/\")[4])) on name\r\n| where ResourceType in ('microsoft.web', 'Microsoft.Network')\r\n| summarize count() by type",
            "size": 4,
            "title": "Security Center | Unhealthy Network Resources",
            "color": "red",
            "noDataMessage": "No unhealthy network resources were found",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "visualization": "tiles",
            "tileSettings": {
              "titleContent": {
                "formatter": 16,
                "formatOptions": {
                  "showIcon": true
                }
              },
              "leftContent": {
                "columnMatch": "count_",
                "formatter": 12,
                "formatOptions": {
                  "min": 0,
                  "palette": "green"
                }
              },
              "showBorder": false
            }
          },
          "customWidth": "30",
          "conditionalVisibility": {
            "parameterName": "SelectedView",
            "comparison": "isEqualTo",
            "value": "Overview"
          },
          "name": "UnhealthyResources",
          "styleSettings": {
            "maxWidth": "30",
            "showBorder": true
          }
        },
        {
          "type": 3,
          "content": {
            "version": "KqlItem/1.0",
            "query": "resources\r\n| where type in ('microsoft.network/publicipaddresses',\r\n 'microsoft.network/ddosprotectionplans',\r\n 'microsoft.network/virtualnetworks',\r\n 'microsoft.network/azurefirewalls',\r\n 'microsoft.network/firewallpolicies',\r\n 'microsoft.network/loadbalancers',\r\n 'microsoft.network/bastionhosts',\r\n 'microsoft.network/routetables',\r\n 'microsoft.network/networksecuritygroups',\r\n 'microsoft.network/frontdoors',\r\n 'microsoft.network/frontdoorwebapplicationfirewallpolicies',\r\n 'microsoft.network/networkinterfaces',\r\n 'microsoft.network/virtualnetworks',\r\n 'microsoft.network/trafficmanagerprofiles',\r\n 'microsoft.network/privateendpoints',\r\n 'microsoft.network/applicationgateways',\r\n 'microsoft.network/applicationgatewaywebapplicationfirewallpolicies',\r\n 'microsoft.network/virtualnetworkgateways',\r\n 'microsoft.network/virtualwans',\r\n 'microsoft.network/expressroutecircuits')\r\n| summarize count() by type",
            "size": 0,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "visualization": "tiles",
            "tileSettings": {
              "titleContent": {
                "columnMatch": "type",
                "formatter": 16,
                "formatOptions": {
                  "showIcon": true
                }
              },
              "leftContent": {
                "columnMatch": "count_",
                "formatter": 12,
                "formatOptions": {
                  "palette": "auto"
                },
                "numberFormat": {
                  "unit": 17,
                  "options": {
                    "style": "decimal",
                    "maximumFractionDigits": 2,
                    "maximumSignificantDigits": 3
                  }
                }
              },
              "showBorder": true
            }
          },
          "conditionalVisibility": {
            "parameterName": "SelectedView",
            "comparison": "isEqualTo",
            "value": "Overview"
          },
          "name": "SummaryTiles"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 11,
                "content": {
                  "version": "LinkItem/1.0",
                  "style": "tabs",
                  "links": [
                    {
                      "id": "3a686e96-1329-4e51-b756-610a415c78c0",
                      "cellValue": "SubSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "Databases",
                      "subTarget": "DatabasesView",
                      "preText": "Databases",
                      "style": "link"
                    },
                    {
                      "id": "1b44f9c0-0841-4193-a790-1fedffbfa702",
                      "cellValue": "SubSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "Storage Accounts",
                      "subTarget": "StorageView",
                      "preText": "Storage Accounts",
                      "style": "link"
                    },
                    {
                      "id": "9b0fceaa-1694-401f-b0ea-ae5f3ab8f13d",
                      "cellValue": "SubSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "App Services",
                      "subTarget": "AppServiceView",
                      "style": "link"
                    },
                    {
                      "id": "7da72949-d6f6-4914-93b5-75ad823090f5",
                      "cellValue": "SubSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "Key Vaults",
                      "subTarget": "KeyVaultView",
                      "style": "link"
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedView",
                  "comparison": "isEqualTo",
                  "value": "PaaSServicesView"
                },
                "name": "PaaSMenu"
              },
              {
                "type": 11,
                "content": {
                  "version": "LinkItem/1.0",
                  "style": "tabs",
                  "links": [
                    {
                      "id": "890e15f1-d0d1-4e9c-b4fc-3a0ddbe7cab8",
                      "cellValue": "DBSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "Overview",
                      "subTarget": "DBOverview",
                      "style": "link"
                    },
                    {
                      "id": "2645cabd-8937-46e4-b63c-f13c5584c017",
                      "cellValue": "DBSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "SQL Server",
                      "subTarget": "SQLDatabaseOverview",
                      "style": "link"
                    },
                    {
                      "id": "bd3ad24e-4ee1-4059-b812-b7674ff151b8",
                      "cellValue": "DBSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "MySQL",
                      "subTarget": "MySQLOverview",
                      "style": "link"
                    },
                    {
                      "id": "8a05ac3f-d3cf-4adc-aedb-252f697a84de",
                      "cellValue": "DBSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "MySQL (flexible server)",
                      "subTarget": "MySQLFlexOverview",
                      "style": "link"
                    },
                    {
                      "id": "b37ee0db-ddd0-48ab-afc0-7165daef098e",
                      "cellValue": "DBSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "PostgreSQL",
                      "subTarget": "PostgreSQLOverview",
                      "style": "link"
                    },
                    {
                      "id": "e14ce498-7217-45b8-a07c-ab88a08ceea7",
                      "cellValue": "DBSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "PostgreSQL (flexible server)",
                      "subTarget": "PostgreSQLFlexOverview",
                      "style": "link"
                    },
                    {
                      "id": "8f347b7a-b0cb-48dd-9586-2310209d95b7",
                      "cellValue": "DBSelectedView",
                      "linkTarget": "parameter",
                      "linkLabel": "MariaDB",
                      "subTarget": "MariaDBOverview",
                      "style": "link"
                    }
                  ]
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DatabasesView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "DatabaseMenu"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where ['type'] == \"microsoft.dbformysql/servers\" or ['type'] == \"microsoft.dbforpostgresql/servers\" or ['type'] == \"microsoft.sql/servers\" or  ['type'] == \"microsoft.dbformariadb/servers\" or ['type'] == \"microsoft.dbformysql/flexibleservers\" or ['type'] == \"microsoft.dbforpostgresql/flexibleservers\"\r\n| extend publicNetworkAccess = iif(isempty(tostring(properties.publicNetworkAccess)),\"Undefined\",tostring(properties.publicNetworkAccess)) \r\n| project-away kind, managedBy, sku, plan, properties, tags, identity, zones, extendedLocation\r\n| summarize count() by tostring(publicNetworkAccess)",
                  "size": 1,
                  "title": "PublicNetworkAccess ",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "visualization": "piechart",
                  "sortBy": []
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DBOverview"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DatabasesView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "publicNetworkAccessPieChart",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where type in ('microsoft.dbformysql/servers',\"microsoft.dbforpostgresql/servers\",\"microsoft.sql/servers\",\"microsoft.dbformariadb/servers\",\"microsoft.dbformysql/flexibleservers\",\"microsoft.dbforpostgresql/flexibleservers\")\r\n| summarize count() by type",
                  "size": 1,
                  "title": "Database - SummaryTiles",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "visualization": "tiles",
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "type",
                      "formatter": 16,
                      "formatOptions": {
                        "showIcon": true
                      }
                    },
                    "leftContent": {
                      "columnMatch": "count_",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "auto"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "showBorder": true,
                    "size": "auto"
                  }
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DBOverview"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DatabasesView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "DatabaseSummaryTiles"
              },
              {
                "type": 1,
                "content": {
                  "json": "Please select a item to view / see firewall rules & vnet rules \r\n",
                  "style": "info"
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "SQLDatabaseOverview"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DatabasesView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "SQLDatabase - InfoText"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where ['type'] == \"microsoft.sql/servers\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend publicNetworkAccess = properties.publicNetworkAccess\r\n| extend privateEndpointConnections = tostring(properties.privateEndpointConnections)\r\n| project-away kind, managedBy, sku, plan, identity, properties, tenantId, tags, zones, extendedLocation, resourceGroup",
                  "size": 1,
                  "title": "All SQL Servers",
                  "exportFieldName": "id",
                  "exportParameterName": "ResourceID",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "name",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true,
                          "customColumnWidthSetting": "20ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "publicNetworkAccess",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Enabled",
                              "representation": "failed",
                              "text": "Enabled"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "Disabled"
                            }
                          ],
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "privateEndpointConnections",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "[[]",
                              "representation": "more",
                              "text": "Not Configured"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "Configured"
                            }
                          ],
                          "customColumnWidthSetting": "28ch"
                        }
                      },
                      {
                        "columnMatch": "resourceGroup",
                        "formatter": 14,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": false,
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "privateEndpointIds",
                        "formatter": 0,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "publicNetworkAccess",
                        "label": "Public Network Access"
                      },
                      {
                        "columnId": "privateEndpointConnections",
                        "label": "Private Endpoint"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "SQLDatabaseOverview"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DatabasesView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "SQL Database - Overview"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{ResourceID}/firewallRules?api-version=2018-06-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.properties.startIpAddress\",\"columnid\":\"startIpAddress\"},{\"path\":\"$.properties.endIpAddress\",\"columnid\":\"endIpAddress\"},{\"path\":\"$.name\",\"columnid\":\"name\"},{\"path\":\"$.id\",\"columnid\":\"id\"}]}}]}",
                  "size": 4,
                  "title": "FirewallRules of Selected SQL Server",
                  "noDataMessage": "No FirewallRules configured.",
                  "queryType": 12
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "SQLDatabaseOverview"
                  },
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "SQL Database - FirewallRules"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{ResourceID}/virtualNetworkRules?api-version=2021-02-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..value\",\"columns\":[{\"path\":\"$.name\",\"columnid\":\"name\"},{\"path\":\"$.type\",\"columnid\":\"type\"},{\"path\":\"$..virtualNetworkSubnetId\",\"columnid\":\"virtualNetworkSubnetId\"},{\"path\":\"$..ignoreMissingVnetServiceEndpoint\",\"columnid\":\"ignoreMissingVnetServiceEndpoint\"},{\"path\":\"$..state\",\"columnid\":\"state\"}]}}]}",
                  "size": 4,
                  "title": "VNetRules of Selected SQL Server",
                  "noDataMessage": "No VNetRules configured.",
                  "queryType": 12,
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "ignoreMissingVnetServiceEndpoint",
                        "formatter": 5
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "name",
                        "label": "Rule Name"
                      },
                      {
                        "columnId": "virtualNetworkSubnetId",
                        "label": "Resource ID"
                      },
                      {
                        "columnId": "ignoreMissingVnetServiceEndpoint",
                        "label": "VNET ServiceEndpoint Missing"
                      },
                      {
                        "columnId": "state",
                        "label": "State"
                      }
                    ]
                  }
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "SQLDatabaseOverview"
                  },
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "SQL Database - VNetRules"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where id == \"{ResourceID}\"\r\n| extend privateEndpointConnections = properties.privateEndpointConnections\r\n| mv-expand privateEndpointConnections\r\n| extend provisioningState = privateEndpointConnections.properties.provisioningState\r\n| extend description = privateEndpointConnections.properties.privateLinkServiceConnectionState.description\r\n| extend status = privateEndpointConnections.properties.privateLinkServiceConnectionState.status\r\n| extend actionRequired = privateEndpointConnections.properties.privateLinkServiceConnectionState.actionRequired\r\n| extend privateEndpointId = privateEndpointConnections.properties.privateEndpoint.id\r\n| project privateEndpointId, tostring(provisioningState), tostring(description), tostring(status), tostring(actionRequired)",
                  "size": 4,
                  "title": "PrivateEndpoints of Selected SQL Server",
                  "noDataMessage": "No PrivateEndpoints configured.",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "privateEndpointId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "type",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "ignoreMissingVnetServiceEndpoint",
                        "formatter": 5
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "privateEndpointId",
                        "label": "Private Endpoint"
                      },
                      {
                        "columnId": "provisioningState",
                        "label": "Provisioning State"
                      },
                      {
                        "columnId": "description",
                        "label": "Description"
                      },
                      {
                        "columnId": "status",
                        "label": "Status"
                      },
                      {
                        "columnId": "actionRequired",
                        "label": "Action Required"
                      }
                    ]
                  }
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "SQLDatabaseOverview"
                  },
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "SQL Database - PrivateEndpoints"
              },
              {
                "type": 1,
                "content": {
                  "json": "Please select a item to view / see firewall rules & vnet rules \r\n",
                  "style": "info"
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "MySQLOverview"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DatabasesView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "MySQL - InfoText"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where ['type'] == \"microsoft.dbformysql/servers\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend publicNetworkAccess = properties.publicNetworkAccess\r\n| extend sslEnforcement = properties.sslEnforcement\r\n| project-away kind, managedBy, sku, plan, properties, identity,tenantId, tags, zones, extendedLocation, resourceGroup",
                  "size": 1,
                  "title": "All MySQL Servers",
                  "exportFieldName": "id",
                  "exportParameterName": "ResourceID",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "name",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true,
                          "customColumnWidthSetting": "30ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "publicNetworkAccess",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Enabled",
                              "representation": "failed",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "sslEnforcement",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Enabled",
                              "representation": "success",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "failed",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "resourceGroup",
                        "formatter": 14,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": false
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "publicNetworkAccess",
                        "label": "Public Network Access"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "MySQLOverview"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DatabasesView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "MySQL - Overview"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{ResourceID}/firewallRules?api-version=2017-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.properties.startIpAddress\",\"columnid\":\"startIpAddress\"},{\"path\":\"$.properties.endIpAddress\",\"columnid\":\"endIpAddress\"},{\"path\":\"$.name\",\"columnid\":\"name\"},{\"path\":\"$.id\",\"columnid\":\"id\"}]}}]}",
                  "size": 4,
                  "title": "FirewallRules of Selected MySQL Server",
                  "noDataMessage": "No FirewallRules configured.",
                  "queryType": 12,
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "id",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "startIpAddress",
                        "label": "Start IP Address"
                      },
                      {
                        "columnId": "endIpAddress",
                        "label": "End IP Address"
                      },
                      {
                        "columnId": "name",
                        "label": "Rule Name"
                      },
                      {
                        "columnId": "id",
                        "label": "Resource ID"
                      }
                    ]
                  }
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "MySQLOverview"
                  },
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "MySQL - FirewallRules"
              },
              {
                "type": 1,
                "content": {
                  "json": "Please select a item to view / see firewall rules & vnet rules \r\n",
                  "style": "info"
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "MySQLFlexOverview"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DatabasesView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "MySQL (flexible server) - InfoText"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where ['type'] == \"microsoft.dbformysql/flexibleservers\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend publicNetworkAccess = properties.publicNetworkAccess\r\n| extend Subnet = properties.delegatedSubnetArguments.subnetArmResourceId\r\n| project-away kind, managedBy, sku, plan, properties, identity,tenantId, tags, zones, extendedLocation, resourceGroup",
                  "size": 1,
                  "title": "All MySQL Servers",
                  "exportFieldName": "id",
                  "exportParameterName": "ResourceID",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "name",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true,
                          "customColumnWidthSetting": "40ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "publicNetworkAccess",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Enabled",
                              "representation": "failed",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "Subnet",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "resourceGroup",
                        "formatter": 14,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": false
                        }
                      },
                      {
                        "columnMatch": "sslEnforcement",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Enabled",
                              "representation": "success",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "failed",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "publicNetworkAccess",
                        "label": "Public Network Access"
                      },
                      {
                        "columnId": "Subnet",
                        "label": "VNet Integration"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "MySQLFlexOverview"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DatabasesView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "MySQL (flexible server) - Overview"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{ResourceID}/firewallRules?api-version=2021-05-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.properties.startIpAddress\",\"columnid\":\"startIpAddress\"},{\"path\":\"$.properties.endIpAddress\",\"columnid\":\"endIpAddress\"},{\"path\":\"$.name\",\"columnid\":\"name\"}]}}]}",
                  "size": 4,
                  "title": "FirewallRules of Selected MySQL Server",
                  "noDataMessage": "No FirewallRules configured.",
                  "queryType": 12
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "MySQLFlexOverview"
                  },
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "MySQL (flexible server) - FirewallRules"
              },
              {
                "type": 1,
                "content": {
                  "json": "Please select a item to view / see firewall rules & vnet rules \r\n",
                  "style": "info"
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "PostgreSQLOverview"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DatabasesView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "PostgreSQL - InfoText"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where ['type'] == \"microsoft.dbforpostgresql/servers\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend publicNetworkAccess = properties.publicNetworkAccess\r\n| extend sslEnforcement = properties.sslEnforcement\r\n| project-away kind, managedBy, sku, plan, properties, identity,tenantId, tags, zones, extendedLocation, resourceGroup",
                  "size": 1,
                  "title": "All PostgreSQL Servers",
                  "exportFieldName": "id",
                  "exportParameterName": "ResourceID",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "name",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true,
                          "customColumnWidthSetting": "40ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "publicNetworkAccess",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Enabled",
                              "representation": "failed",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "sslEnforcement",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Enabled",
                              "representation": "success",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "failed",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "resourceGroup",
                        "formatter": 14,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": false
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "publicNetworkAccess",
                        "label": "Public Network Access"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "PostgreSQLOverview"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DatabasesView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "PostgreSQL - Overview"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{ResourceID}/firewallRules?api-version=2017-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.properties.startIpAddress\",\"columnid\":\"startIpAddress\"},{\"path\":\"$.properties.endIpAddress\",\"columnid\":\"endIpAddress\"},{\"path\":\"$.name\",\"columnid\":\"name\"},{\"path\":\"$.id\",\"columnid\":\"id\"}]}}]}",
                  "size": 4,
                  "title": "FirewallRules of Selected PostgreSQL Server",
                  "noDataMessage": "No FirewallRules configured.",
                  "queryType": 12
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "PostgreSQLOverview"
                  },
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "PostgreSQL - FirewallRules"
              },
              {
                "type": 1,
                "content": {
                  "json": "Please select a item to view / see firewall rules & vnet rules \r\n",
                  "style": "info"
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "PostgreSQLFlexOverview"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DatabasesView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "PostgreSQL (flexible server) - InfoText"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where ['type'] == \"microsoft.dbforpostgresql/flexibleservers\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend publicNetworkAccess = properties.publicNetworkAccess\r\n| extend Subnet = properties.delegatedSubnetArguments.subnetArmResourceId\r\n| project-away kind, managedBy, sku, plan, properties, identity,tenantId, tags, zones, extendedLocation, resourceGroup",
                  "size": 1,
                  "title": "All PostgreSQL Servers",
                  "exportFieldName": "id",
                  "exportParameterName": "ResourceID",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "name",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true,
                          "customColumnWidthSetting": "45ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "publicNetworkAccess",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Enabled",
                              "representation": "failed",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "Subnet",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "resourceGroup",
                        "formatter": 14,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": false
                        }
                      },
                      {
                        "columnMatch": "sslEnforcement",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Enabled",
                              "representation": "success",
                              "text": "Enabled"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "failed",
                              "text": "Disabled"
                            }
                          ]
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "publicNetworkAccess",
                        "label": "Public Network Access"
                      },
                      {
                        "columnId": "Subnet",
                        "label": "VNet Integration"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "PostgreSQLFlexOverview"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DatabasesView"
                  }
                ],
                "name": "PostgreSQL (flexible server) - Overview"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{ResourceID}/firewallRules?api-version=2021-06-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.properties.startIpAddress\",\"columnid\":\"startIpAddress\"},{\"path\":\"$.properties.endIpAddress\",\"columnid\":\"endIpAddress\"},{\"path\":\"$.name\",\"columnid\":\"name\"}]}}]}",
                  "size": 4,
                  "title": "FirewallRules of Selected PostgreSQL Server",
                  "noDataMessage": "No FirewallRules configured.",
                  "queryType": 12
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "PostgreSQLFlexOverview"
                  },
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "PostgreSQL (flexible server) - FirewallRules"
              },
              {
                "type": 1,
                "content": {
                  "json": "Please select a item to view / see firewall rules & vnet rules \r\n",
                  "style": "info"
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "MariaDBOverview"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DatabasesView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "MariaDB - InfoText"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where ['type'] == \"microsoft.dbformariadb/servers\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend publicNetworkAccess = properties.publicNetworkAccess\r\n| extend sslEnforcement = properties.sslEnforcement\r\n| project-away kind, managedBy, sku, plan, properties, identity,tenantId, tags, zones, extendedLocation, resourceGroup",
                  "size": 1,
                  "title": "All MariaDB Servers",
                  "exportFieldName": "id",
                  "exportParameterName": "ResourceID",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "name",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true,
                          "customColumnWidthSetting": "35ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "publicNetworkAccess",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Enabled",
                              "representation": "failed",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "sslEnforcement",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Enabled",
                              "representation": "success",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "failed",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "resourceGroup",
                        "formatter": 14,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": false
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "publicNetworkAccess",
                        "label": "Public Network Access"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "MariaDBOverview"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "DatabasesView"
                  }
                ],
                "name": "MariaDB - Overview"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{ResourceID}/firewallRules?api-version=2018-06-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"$.properties.startIpAddress\",\"columnid\":\"startIpAddress\"},{\"path\":\"$.properties.endIpAddress\",\"columnid\":\"endIpAddress\"},{\"path\":\"$.name\",\"columnid\":\"name\"},{\"path\":\"$.id\",\"columnid\":\"id\"}]}}]}",
                  "size": 4,
                  "title": "FirewallRules of Selected MariaDB Server",
                  "noDataMessage": "No FirewallRules configured.",
                  "queryType": 12
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "DBSelectedView",
                    "comparison": "isEqualTo",
                    "value": "MariaDBOverview"
                  },
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "MariaDB - FirewallRules"
              },
              {
                "type": 1,
                "content": {
                  "json": "Please select a item to view / see firewall rules & vnet rules & private endpoints\r\n",
                  "style": "info"
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "StorageView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "MariaDB - InfoText - Copy"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where type == \"microsoft.storage/storageaccounts\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend supportsHttpsTrafficOnly = properties.supportsHttpsTrafficOnly\r\n| extend allowBlobPublicAccess = properties.allowBlobPublicAccess\r\n| extend networkAcls = tostring(properties.networkAcls.virtualNetworkRules)\r\n| extend privateEndpointConnections = tostring(properties.privateEndpointConnections)\r\n| extend defaultAction = properties.networkAcls.defaultAction\r\n| extend ipRules = tostring(properties.networkAcls.ipRules)\r\n| project-away kind, name, managedBy, sku, plan, identity, properties, tenantId, tags, zones, extendedLocation, apiVersion, resourceGroup",
                  "size": 0,
                  "title": "All Storage Accounts",
                  "exportFieldName": "id",
                  "exportParameterName": "ResourceID",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true,
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "20ch"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "supportsHttpsTrafficOnly",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "true",
                              "representation": "success",
                              "text": "True"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "failed",
                              "text": "False"
                            }
                          ],
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "allowBlobPublicAccess",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "true",
                              "representation": "failed",
                              "text": "True"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "false",
                              "representation": "success",
                              "text": "False"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "failed",
                              "text": "True"
                            }
                          ],
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "networkAcls",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "[[]",
                              "representation": "more",
                              "text": "Not Configured"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "Configured"
                            }
                          ],
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "privateEndpointConnections",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "[[]",
                              "representation": "more",
                              "text": "Not Configured"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "Configured"
                            }
                          ],
                          "customColumnWidthSetting": "30ch"
                        }
                      },
                      {
                        "columnMatch": "defaultAction",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Deny",
                              "representation": "success"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Allow",
                              "representation": "failed",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "ipRules",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "[[]",
                              "representation": "more",
                              "text": "Not Configured"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "Configured"
                            }
                          ],
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "resourceGroup",
                        "formatter": 14,
                        "formatOptions": {
                          "linkTarget": null,
                          "showIcon": false
                        }
                      }
                    ],
                    "sortBy": [
                      {
                        "itemKey": "$gen_thresholds_networkAcls_7",
                        "sortOrder": 1
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "supportsHttpsTrafficOnly",
                        "label": "HTTPS Traffic Only"
                      },
                      {
                        "columnId": "allowBlobPublicAccess",
                        "label": "Public Blob Access"
                      },
                      {
                        "columnId": "networkAcls",
                        "label": "NetworkRules"
                      },
                      {
                        "columnId": "privateEndpointConnections",
                        "label": "Private Endpoints"
                      },
                      {
                        "columnId": "defaultAction",
                        "label": "Public Access"
                      },
                      {
                        "columnId": "ipRules",
                        "label": "IPRules"
                      }
                    ]
                  },
                  "sortBy": [
                    {
                      "itemKey": "$gen_thresholds_networkAcls_7",
                      "sortOrder": 1
                    }
                  ]
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "StorageView"
                  }
                ],
                "showPin": true,
                "name": "Storage Accounts - Overview"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where id == \"{ResourceID}\"\r\n| extend ipRules = properties.networkAcls.ipRules\r\n| mv-expand ipRules\r\n| extend RuleValue = ipRules.value\r\n| extend RuleAction = ipRules.action\r\n| project tostring(RuleValue), tostring(RuleAction)",
                  "size": 4,
                  "title": "IPRules of Selected Storage Account",
                  "noDataMessage": "No ipRules configured.",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ]
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "StorageView"
                  },
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "Storage Accounts - IPRules"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where id == \"{ResourceID}\"\r\n| extend virtualNetworkRules = properties.networkAcls.virtualNetworkRules\r\n| mv-expand virtualNetworkRules\r\n| extend virtualNetworkRulesid = virtualNetworkRules.id\r\n| extend virtualNetworkRulesstate = virtualNetworkRules.state\r\n| extend virtualNetworkRulesaction = virtualNetworkRules.action\r\n| project virtualNetworkRulesid, tostring(virtualNetworkRulesstate), tostring(virtualNetworkRulesaction)",
                  "size": 4,
                  "title": "NetworkRules of Selected Storage Account",
                  "noDataMessage": "No networkAcls configured.",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "virtualNetworkRulesid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "linkIsContextBlade": true,
                          "showIcon": true,
                          "customColumnWidthSetting": "70ch"
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "virtualNetworkRulesid",
                        "label": "Virtual Network"
                      },
                      {
                        "columnId": "virtualNetworkRulesstate",
                        "label": "State"
                      },
                      {
                        "columnId": "virtualNetworkRulesaction",
                        "label": "Action"
                      }
                    ]
                  }
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "StorageView"
                  },
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "Storage Accounts - NetworkRules"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where id == \"{ResourceID}\"\r\n| extend privateEndpointConnections = properties.privateEndpointConnections\r\n| mv-expand privateEndpointConnections\r\n| extend provisioningState = privateEndpointConnections.properties.provisioningState\r\n| extend description = privateEndpointConnections.properties.privateLinkServiceConnectionState.description\r\n| extend status = privateEndpointConnections.properties.privateLinkServiceConnectionState.status\r\n| extend actionRequired = privateEndpointConnections.properties.privateLinkServiceConnectionState.actionRequired\r\n| extend privateEndpointId = privateEndpointConnections.properties.privateEndpoint.id\r\n| project privateEndpointId, tostring(provisioningState), tostring(description), tostring(status), tostring(actionRequired)",
                  "size": 4,
                  "title": "Private Endpoints of Selected Storage Account",
                  "noDataMessage": "No privateEndpointConnections configured..",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "privateEndpointId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "linkIsContextBlade": false,
                          "showIcon": true
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "privateEndpointId",
                        "label": "Private Endpoint"
                      },
                      {
                        "columnId": "provisioningState",
                        "label": "Provisioning State"
                      },
                      {
                        "columnId": "description",
                        "label": "Description"
                      },
                      {
                        "columnId": "status",
                        "label": "Status"
                      },
                      {
                        "columnId": "actionRequired",
                        "label": "Action Required"
                      }
                    ]
                  }
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "StorageView"
                  },
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "Storage Accounts - PrivateEndpoints"
              },
              {
                "type": 1,
                "content": {
                  "json": "Please select a item to view / see VNET Route All + Public Network Access, HTTP 2.0 + Tls Version + FTPs State.\r\n\r\n\r\n\r\n\r\n",
                  "style": "info"
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "AppServiceView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "App Services - InfoText"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where type == \"microsoft.web/sites\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend privateEndpointConnections = tostring(properties.privateEndpointConnections)\r\n| extend virtualNetworkSubnetId = tostring(properties.virtualNetworkSubnetId)\r\n| extend httpsOnly = tostring(properties.httpsOnly)\r\n| project-away name, properties, managedBy, sku, plan, identity, tenantId, tags, zones, extendedLocation, apiVersion, resourceGroup",
                  "size": 0,
                  "title": "All App Services",
                  "exportFieldName": "id",
                  "exportParameterName": "ResourceID",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true,
                          "customColumnWidthSetting": "20ch"
                        }
                      },
                      {
                        "columnMatch": "kind",
                        "formatter": 0,
                        "formatOptions": {
                          "customColumnWidthSetting": "15ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "130px"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "RG",
                        "formatter": 14,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "privateEndpointConnections",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "[[]",
                              "representation": "more",
                              "text": "Not Configured"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "Configured"
                            }
                          ],
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "virtualNetworkSubnetId",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "is Empty",
                              "representation": "more",
                              "text": "Not Configured"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "Configured"
                            }
                          ],
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "httpsOnly",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "true",
                              "representation": "success",
                              "text": "True"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "failed",
                              "text": "False"
                            }
                          ]
                        }
                      }
                    ],
                    "sortBy": [
                      {
                        "itemKey": "$gen_thresholds_privateEndpointConnections_6",
                        "sortOrder": 2
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "kind",
                        "label": "Kind"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "privateEndpointConnections",
                        "label": "Private Endpoints"
                      },
                      {
                        "columnId": "virtualNetworkSubnetId",
                        "label": "VNet Integration"
                      },
                      {
                        "columnId": "httpsOnly",
                        "label": "HTTPS Only"
                      }
                    ]
                  },
                  "sortBy": [
                    {
                      "itemKey": "$gen_thresholds_privateEndpointConnections_6",
                      "sortOrder": 2
                    }
                  ]
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "AppServiceView"
                  }
                ],
                "name": "App Services - Overview"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{ResourceID}/config/web?api-version=2021-02-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"\",\"columns\":[{\"path\":\"$.properties.vnetRouteAllEnabled\",\"columnid\":\"vnetRouteAllEnabled\"},{\"path\":\"$.properties.publicNetworkAccess\",\"columnid\":\"publicNetworkAccess\"},{\"path\":\"$.properties.http20Enabled\",\"columnid\":\"http20Enabled\"},{\"path\":\"$.properties.minTlsVersion\",\"columnid\":\"minTlsVersion\"},{\"path\":\"$.properties.ftpsState\",\"columnid\":\"ftpsState\"}]}}]}",
                  "size": 4,
                  "title": "Additional Properties of Selected App Service",
                  "queryType": 12,
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "vnetRouteAllEnabled",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "false",
                              "representation": "failed",
                              "text": "False"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "true",
                              "representation": "success",
                              "text": "True"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "publicNetworkAccess",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "is Empty",
                              "thresholdValue": "Null",
                              "representation": "more",
                              "text": "Null / Enabled"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Disabled",
                              "representation": "success",
                              "text": "Disabled"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "failed",
                              "text": "Enabled"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "http20Enabled",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "1",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "minTlsVersion",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "1",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "ftpsState",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "AllAllowed",
                              "representation": "failed",
                              "text": "AllAllowed"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Disabled",
                              "representation": "stopped",
                              "text": "Disabled"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "FtpsOnly",
                              "representation": "success",
                              "text": "FtpsOnly"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "vnetRouteAllEnabled",
                        "label": "VNET Route All"
                      },
                      {
                        "columnId": "publicNetworkAccess",
                        "label": "Public Network Access"
                      },
                      {
                        "columnId": "http20Enabled",
                        "label": "HTTP 2.0"
                      },
                      {
                        "columnId": "minTlsVersion",
                        "label": "Tls Version"
                      },
                      {
                        "columnId": "ftpsState",
                        "label": "FTPs State"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "AppServiceView"
                  },
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "App Services - Additional Properties"
              },
              {
                "type": 1,
                "content": {
                  "json": "Please select a item to view / see firewall rules & vnet rules & private endpoints\r\n",
                  "style": "info"
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "KeyVaultView"
                  },
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  }
                ],
                "name": "Key Vaults - InfoText"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where type =~ \"microsoft.keyVault/vaults\"\r\n| extend RG = substring(id, 0, indexof(id, '/providers'))\r\n| extend privateEndpointConnections = tostring(properties.privateEndpointConnections)\r\n| extend virtualNetworkRules = tostring(properties.networkAcls.virtualNetworkRules)\r\n| extend ipRules = tostring(properties.networkAcls.ipRules)\r\n| project-away name, managedBy, sku, plan, identity, tenantId, properties, tags, kind, zones, extendedLocation, apiVersion, resourceGroup",
                  "size": 0,
                  "title": "All Key Vaults",
                  "exportFieldName": "id",
                  "exportParameterName": "ResourceID",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "type",
                        "formatter": 16,
                        "formatOptions": {
                          "showIcon": true,
                          "customColumnWidthSetting": "20ch"
                        }
                      },
                      {
                        "columnMatch": "location",
                        "formatter": 17,
                        "formatOptions": {
                          "customColumnWidthSetting": "130px"
                        }
                      },
                      {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "RG",
                        "formatter": 14,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "privateEndpointConnections",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "is Empty",
                              "representation": "more",
                              "text": "Not Configured"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "[[]",
                              "representation": "more",
                              "text": "Not Configured"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "Configured"
                            }
                          ],
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "virtualNetworkRules",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "is Empty",
                              "representation": "more",
                              "text": "Not Configured"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "[[]",
                              "representation": "more",
                              "text": "Not Configured"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "Configured"
                            }
                          ],
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "ipRules",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "is Empty",
                              "representation": "more",
                              "text": "Not Configured"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "[[]",
                              "representation": "more",
                              "text": "Not Configured"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "Configured"
                            }
                          ],
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "kind",
                        "formatter": 0,
                        "formatOptions": {
                          "customColumnWidthSetting": "15ch"
                        }
                      },
                      {
                        "columnMatch": "virtualNetworkSubnetId",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "is Empty",
                              "representation": "more",
                              "text": "Not Configured"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "Configured"
                            }
                          ],
                          "customColumnWidthSetting": "25ch"
                        }
                      },
                      {
                        "columnMatch": "httpsOnly",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "true",
                              "representation": "success",
                              "text": "True"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "failed",
                              "text": "False"
                            }
                          ]
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "id",
                        "label": "Name"
                      },
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "location",
                        "label": "Region"
                      },
                      {
                        "columnId": "subscriptionId",
                        "label": "Subscription"
                      },
                      {
                        "columnId": "RG",
                        "label": "Resource Group"
                      },
                      {
                        "columnId": "privateEndpointConnections",
                        "label": "Private Endpoints"
                      },
                      {
                        "columnId": "virtualNetworkRules",
                        "label": "NetworkRules"
                      },
                      {
                        "columnId": "ipRules",
                        "label": "IPRules"
                      }
                    ]
                  },
                  "sortBy": []
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "KeyVaultView"
                  }
                ],
                "name": "Key Vaults - Overview"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where id == \"{ResourceID}\"\r\n| extend ipRules = properties.networkAcls.ipRules\r\n| mv-expand ipRules\r\n| extend RuleValue = ipRules.value\r\n| project-away id, type, name, location, subscriptionId, managedBy, sku, plan, identity, tenantId, properties, tags, kind, zones, extendedLocation, apiVersion, resourceGroup, ipRules",
                  "size": 4,
                  "title": "IPRules of Selected Key Vault",
                  "noDataMessage": "No ipRules configured.",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ]
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "KeyVaultView"
                  },
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "Key Vaults - IPRules"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where id == \"{ResourceID}\"\r\n| extend virtualNetworkRules = properties.networkAcls.virtualNetworkRules\r\n| mv-expand virtualNetworkRules\r\n| extend virtualNetworkRulesid = virtualNetworkRules.id\r\n| extend virtualNetworkRulesstate = virtualNetworkRules.state\r\n| extend virtualNetworkRulesaction = virtualNetworkRules.action\r\n| project virtualNetworkRulesid, tostring(virtualNetworkRulesstate), tostring(virtualNetworkRulesaction)",
                  "size": 4,
                  "title": "NetworkRules of Selected Key Vault",
                  "noDataMessage": "No networkAcls configured.",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "virtualNetworkRulesid",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "linkIsContextBlade": true,
                          "showIcon": true,
                          "customColumnWidthSetting": "70ch"
                        }
                      }
                    ]
                  }
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "KeyVaultView"
                  },
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "Key Vault - NetworkRules"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "resources\r\n| where id == \"{ResourceID}\"\r\n| extend privateEndpointConnections = properties.privateEndpointConnections\r\n| mv-expand privateEndpointConnections\r\n| extend provisioningState = privateEndpointConnections.properties.provisioningState\r\n| extend description = privateEndpointConnections.properties.privateLinkServiceConnectionState.description\r\n| extend status = privateEndpointConnections.properties.privateLinkServiceConnectionState.status\r\n| extend actionRequired = privateEndpointConnections.properties.privateLinkServiceConnectionState.actionRequired\r\n| extend privateEndpointId = privateEndpointConnections.properties.privateEndpoint.id\r\n| project privateEndpointId, tostring(provisioningState), tostring(description), tostring(status), tostring(actionRequired)",
                  "size": 4,
                  "title": "Private Endpoints of Selected Key Vault",
                  "noDataMessage": "No privateEndpointConnections configured..",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "privateEndpointId",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource",
                          "linkIsContextBlade": false,
                          "showIcon": true
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "privateEndpointId",
                        "label": "Private Endpoint"
                      },
                      {
                        "columnId": "provisioningState",
                        "label": "Provisioning State"
                      },
                      {
                        "columnId": "description",
                        "label": "Description"
                      },
                      {
                        "columnId": "status",
                        "label": "Status"
                      },
                      {
                        "columnId": "actionRequired",
                        "label": "Action Required"
                      }
                    ]
                  }
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedView",
                    "comparison": "isEqualTo",
                    "value": "PaaSServicesView"
                  },
                  {
                    "parameterName": "SubSelectedView",
                    "comparison": "isEqualTo",
                    "value": "KeyVaultView"
                  },
                  {
                    "parameterName": "ResourceID",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "Key Vault - PrivateEndpoints"
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "SelectedView",
            "comparison": "isEqualTo",
            "value": "PaaSServicesView"
          },
          "name": "PaaSServicesGroup"
        }
      ],
      "isLocked": false,
      "fallbackResourceIds": [
        "azure security center"
      ],
      "fromTemplateId": "asc-NetworkSecurityDashboard"
    }
  },
  "resources": [
    {
      "name": "[parameters('workbookId')]",
      "type": "microsoft.insights/workbooks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2021-03-08",
      "dependsOn": [],
      "kind": "shared",
      "properties": {
        "displayName": "[parameters('workbookDisplayName')]",
        "serializedData": "[string(variables('workbookContent'))]",
        "version": "1.0",
        "sourceId": "[parameters('workbookSourceId')]",
        "category": "[parameters('workbookType')]"
      }
    }
  ],
  "outputs": {
    "workbookId": {
      "type": "string",
      "value": "[resourceId( 'microsoft.insights/workbooks', parameters('workbookId'))]"
    }
  },
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
}
